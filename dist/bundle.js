/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ var __webpack_modules__ = ({

/***/ "./mapgen.js":
/*!*******************!*\
  !*** ./mapgen.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNoise: () => (/* binding */ createNoise),\n/* harmony export */   defaultFrequency: () => (/* binding */ defaultFrequency),\n/* harmony export */   defaultOctaves: () => (/* binding */ defaultOctaves),\n/* harmony export */   defaultPersistence: () => (/* binding */ defaultPersistence),\n/* harmony export */   generateRandomSeed: () => (/* binding */ generateRandomSeed),\n/* harmony export */   newFractalNoise: () => (/* binding */ newFractalNoise)\n/* harmony export */ });\n/* harmony import */ var open_simplex_noise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! open-simplex-noise */ \"./node_modules/open-simplex-noise/lib/mod.js\");\n\r\n\r\nfunction generateRandomSeed() {\r\n  return Math.floor(Math.random() * Math.pow(2, 32));\r\n}\r\n\r\nfunction createNoise(seed) {\r\n  return (0,open_simplex_noise__WEBPACK_IMPORTED_MODULE_0__.makeNoise2D)(seed);\r\n}\r\n\r\nfunction newFractalNoise(info) {\r\n  const {\r\n    noise,\r\n    octaves = defaultOctaves,\r\n    amplitude = 1,\r\n    frequency = defaultFrequency,\r\n    persistence = defaultPersistence\r\n  } = info;\r\n\r\n  return function getFractalNoise(x, y) {\r\n    let value = 0.0;\r\n\r\n    for (let octave = 0; octave < octaves; octave++) {\r\n      let freq = frequency * Math.pow(2, octave);\r\n\r\n      value += noise(\r\n        x * freq,\r\n        y * freq\r\n      ) * (amplitude * Math.pow(persistence, octave));\r\n    }\r\n\r\n    return value / (2 - 1 / Math.pow(2, octaves - 1));\r\n  };\r\n}\r\n\r\nconst defaultOctaves = 10;\r\nconst defaultFrequency = 0.2;\r\nconst defaultPersistence = 0.65;\r\n\r\n\n\n//# sourceURL=webpack:///./mapgen.js?");

/***/ }),

/***/ "./node_modules/open-simplex-noise/lib/2d.js":
/*!***************************************************!*\
  !*** ./node_modules/open-simplex-noise/lib/2d.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\n// This is free and unencumbered software released into the public domain\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.makeNoise2D = void 0;\r\nvar shuffle_seed_1 = __webpack_require__(/*! ./shuffle_seed */ \"./node_modules/open-simplex-noise/lib/shuffle_seed.js\");\r\nvar NORM_2D = 1.0 / 47.0;\r\nvar SQUISH_2D = (Math.sqrt(2 + 1) - 1) / 2;\r\nvar STRETCH_2D = (1 / Math.sqrt(2 + 1) - 1) / 2;\r\nfunction contribution2D(multiplier, xsb, ysb) {\r\n    return {\r\n        dx: -xsb - multiplier * SQUISH_2D,\r\n        dy: -ysb - multiplier * SQUISH_2D,\r\n        xsb: xsb,\r\n        ysb: ysb,\r\n    };\r\n}\r\nfunction makeNoise2D(clientSeed) {\r\n    var contributions = [];\r\n    for (var i = 0; i < p2D.length; i += 4) {\r\n        var baseSet = base2D[p2D[i]];\r\n        var previous = null;\r\n        var current = null;\r\n        for (var k = 0; k < baseSet.length; k += 3) {\r\n            current = contribution2D(baseSet[k], baseSet[k + 1], baseSet[k + 2]);\r\n            if (previous === null)\r\n                contributions[i / 4] = current;\r\n            else\r\n                previous.next = current;\r\n            previous = current;\r\n        }\r\n        current.next = contribution2D(p2D[i + 1], p2D[i + 2], p2D[i + 3]);\r\n    }\r\n    var lookup = [];\r\n    for (var i = 0; i < lookupPairs2D.length; i += 2) {\r\n        lookup[lookupPairs2D[i]] = contributions[lookupPairs2D[i + 1]];\r\n    }\r\n    var perm = new Uint8Array(256);\r\n    var perm2D = new Uint8Array(256);\r\n    var source = new Uint8Array(256);\r\n    for (var i = 0; i < 256; i++)\r\n        source[i] = i;\r\n    var seed = new Uint32Array(1);\r\n    seed[0] = clientSeed;\r\n    seed = shuffle_seed_1.default(shuffle_seed_1.default(shuffle_seed_1.default(seed)));\r\n    for (var i = 255; i >= 0; i--) {\r\n        seed = shuffle_seed_1.default(seed);\r\n        var r = new Uint32Array(1);\r\n        r[0] = (seed[0] + 31) % (i + 1);\r\n        if (r[0] < 0)\r\n            r[0] += i + 1;\r\n        perm[i] = source[r[0]];\r\n        perm2D[i] = perm[i] & 0x0e;\r\n        source[r[0]] = source[i];\r\n    }\r\n    return function (x, y) {\r\n        var stretchOffset = (x + y) * STRETCH_2D;\r\n        var xs = x + stretchOffset;\r\n        var ys = y + stretchOffset;\r\n        var xsb = Math.floor(xs);\r\n        var ysb = Math.floor(ys);\r\n        var squishOffset = (xsb + ysb) * SQUISH_2D;\r\n        var dx0 = x - (xsb + squishOffset);\r\n        var dy0 = y - (ysb + squishOffset);\r\n        var xins = xs - xsb;\r\n        var yins = ys - ysb;\r\n        var inSum = xins + yins;\r\n        var hash = (xins - yins + 1) |\r\n            (inSum << 1) |\r\n            ((inSum + yins) << 2) |\r\n            ((inSum + xins) << 4);\r\n        var value = 0;\r\n        for (var c = lookup[hash]; c !== undefined; c = c.next) {\r\n            var dx = dx0 + c.dx;\r\n            var dy = dy0 + c.dy;\r\n            var attn = 2 - dx * dx - dy * dy;\r\n            if (attn > 0) {\r\n                var px = xsb + c.xsb;\r\n                var py = ysb + c.ysb;\r\n                var indexPartA = perm[px & 0xff];\r\n                var index = perm2D[(indexPartA + py) & 0xff];\r\n                var valuePart = gradients2D[index] * dx + gradients2D[index + 1] * dy;\r\n                value += attn * attn * attn * attn * valuePart;\r\n            }\r\n        }\r\n        return value * NORM_2D;\r\n    };\r\n}\r\nexports.makeNoise2D = makeNoise2D;\r\nvar base2D = [\r\n    [1, 1, 0, 1, 0, 1, 0, 0, 0],\r\n    [1, 1, 0, 1, 0, 1, 2, 1, 1],\r\n];\r\nvar gradients2D = [\r\n    5,\r\n    2,\r\n    2,\r\n    5,\r\n    -5,\r\n    2,\r\n    -2,\r\n    5,\r\n    5,\r\n    -2,\r\n    2,\r\n    -5,\r\n    -5,\r\n    -2,\r\n    -2,\r\n    -5,\r\n];\r\nvar lookupPairs2D = [\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    4,\r\n    1,\r\n    17,\r\n    0,\r\n    20,\r\n    2,\r\n    21,\r\n    2,\r\n    22,\r\n    5,\r\n    23,\r\n    5,\r\n    26,\r\n    4,\r\n    39,\r\n    3,\r\n    42,\r\n    4,\r\n    43,\r\n    3,\r\n];\r\nvar p2D = [\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    2,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n];\r\n\n\n//# sourceURL=webpack:///./node_modules/open-simplex-noise/lib/2d.js?");

/***/ }),

/***/ "./node_modules/open-simplex-noise/lib/3d.js":
/*!***************************************************!*\
  !*** ./node_modules/open-simplex-noise/lib/3d.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\n// This is free and unencumbered software released into the public domain\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.makeNoise3D = void 0;\r\nvar shuffle_seed_1 = __webpack_require__(/*! ./shuffle_seed */ \"./node_modules/open-simplex-noise/lib/shuffle_seed.js\");\r\nvar NORM_3D = 1.0 / 103.0;\r\nvar SQUISH_3D = (Math.sqrt(3 + 1) - 1) / 3;\r\nvar STRETCH_3D = (1 / Math.sqrt(3 + 1) - 1) / 3;\r\nfunction contribution3D(multiplier, xsb, ysb, zsb) {\r\n    return {\r\n        dx: -xsb - multiplier * SQUISH_3D,\r\n        dy: -ysb - multiplier * SQUISH_3D,\r\n        dz: -zsb - multiplier * SQUISH_3D,\r\n        xsb: xsb,\r\n        ysb: ysb,\r\n        zsb: zsb,\r\n    };\r\n}\r\nfunction makeNoise3D(clientSeed) {\r\n    var contributions = [];\r\n    for (var i = 0; i < p3D.length; i += 9) {\r\n        var baseSet = base3D[p3D[i]];\r\n        var previous = null;\r\n        var current = null;\r\n        for (var k = 0; k < baseSet.length; k += 4) {\r\n            current = contribution3D(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3]);\r\n            if (previous === null)\r\n                contributions[i / 9] = current;\r\n            else\r\n                previous.next = current;\r\n            previous = current;\r\n        }\r\n        current.next = contribution3D(p3D[i + 1], p3D[i + 2], p3D[i + 3], p3D[i + 4]);\r\n        current.next.next = contribution3D(p3D[i + 5], p3D[i + 6], p3D[i + 7], p3D[i + 8]);\r\n    }\r\n    var lookup = [];\r\n    for (var i = 0; i < lookupPairs3D.length; i += 2) {\r\n        lookup[lookupPairs3D[i]] = contributions[lookupPairs3D[i + 1]];\r\n    }\r\n    var perm = new Uint8Array(256);\r\n    var perm3D = new Uint8Array(256);\r\n    var source = new Uint8Array(256);\r\n    for (var i = 0; i < 256; i++)\r\n        source[i] = i;\r\n    var seed = new Uint32Array(1);\r\n    seed[0] = clientSeed;\r\n    seed = shuffle_seed_1.default(shuffle_seed_1.default(shuffle_seed_1.default(seed)));\r\n    for (var i = 255; i >= 0; i--) {\r\n        seed = shuffle_seed_1.default(seed);\r\n        var r = new Uint32Array(1);\r\n        r[0] = (seed[0] + 31) % (i + 1);\r\n        if (r[0] < 0)\r\n            r[0] += i + 1;\r\n        perm[i] = source[r[0]];\r\n        perm3D[i] = (perm[i] % 24) * 3;\r\n        source[r[0]] = source[i];\r\n    }\r\n    return function (x, y, z) {\r\n        var stretchOffset = (x + y + z) * STRETCH_3D;\r\n        var xs = x + stretchOffset;\r\n        var ys = y + stretchOffset;\r\n        var zs = z + stretchOffset;\r\n        var xsb = Math.floor(xs);\r\n        var ysb = Math.floor(ys);\r\n        var zsb = Math.floor(zs);\r\n        var squishOffset = (xsb + ysb + zsb) * SQUISH_3D;\r\n        var dx0 = x - (xsb + squishOffset);\r\n        var dy0 = y - (ysb + squishOffset);\r\n        var dz0 = z - (zsb + squishOffset);\r\n        var xins = xs - xsb;\r\n        var yins = ys - ysb;\r\n        var zins = zs - zsb;\r\n        var inSum = xins + yins + zins;\r\n        var hash = (yins - zins + 1) |\r\n            ((xins - yins + 1) << 1) |\r\n            ((xins - zins + 1) << 2) |\r\n            (inSum << 3) |\r\n            ((inSum + zins) << 5) |\r\n            ((inSum + yins) << 7) |\r\n            ((inSum + xins) << 9);\r\n        var value = 0;\r\n        for (var c = lookup[hash]; c !== undefined; c = c.next) {\r\n            var dx = dx0 + c.dx;\r\n            var dy = dy0 + c.dy;\r\n            var dz = dz0 + c.dz;\r\n            var attn = 2 - dx * dx - dy * dy - dz * dz;\r\n            if (attn > 0) {\r\n                var px = xsb + c.xsb;\r\n                var py = ysb + c.ysb;\r\n                var pz = zsb + c.zsb;\r\n                var indexPartA = perm[px & 0xff];\r\n                var indexPartB = perm[(indexPartA + py) & 0xff];\r\n                var index = perm3D[(indexPartB + pz) & 0xff];\r\n                var valuePart = gradients3D[index] * dx +\r\n                    gradients3D[index + 1] * dy +\r\n                    gradients3D[index + 2] * dz;\r\n                value += attn * attn * attn * attn * valuePart;\r\n            }\r\n        }\r\n        return value * NORM_3D;\r\n    };\r\n}\r\nexports.makeNoise3D = makeNoise3D;\r\nvar base3D = [\r\n    [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1],\r\n    [2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1, 3, 1, 1, 1],\r\n    [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1],\r\n];\r\nvar gradients3D = [\r\n    -11,\r\n    4,\r\n    4,\r\n    -4,\r\n    11,\r\n    4,\r\n    -4,\r\n    4,\r\n    11,\r\n    11,\r\n    4,\r\n    4,\r\n    4,\r\n    11,\r\n    4,\r\n    4,\r\n    4,\r\n    11,\r\n    -11,\r\n    -4,\r\n    4,\r\n    -4,\r\n    -11,\r\n    4,\r\n    -4,\r\n    -4,\r\n    11,\r\n    11,\r\n    -4,\r\n    4,\r\n    4,\r\n    -11,\r\n    4,\r\n    4,\r\n    -4,\r\n    11,\r\n    -11,\r\n    4,\r\n    -4,\r\n    -4,\r\n    11,\r\n    -4,\r\n    -4,\r\n    4,\r\n    -11,\r\n    11,\r\n    4,\r\n    -4,\r\n    4,\r\n    11,\r\n    -4,\r\n    4,\r\n    4,\r\n    -11,\r\n    -11,\r\n    -4,\r\n    -4,\r\n    -4,\r\n    -11,\r\n    -4,\r\n    -4,\r\n    -4,\r\n    -11,\r\n    11,\r\n    -4,\r\n    -4,\r\n    4,\r\n    -11,\r\n    -4,\r\n    4,\r\n    -4,\r\n    -11,\r\n];\r\nvar lookupPairs3D = [\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    2,\r\n    2,\r\n    5,\r\n    1,\r\n    6,\r\n    0,\r\n    7,\r\n    0,\r\n    32,\r\n    2,\r\n    34,\r\n    2,\r\n    129,\r\n    1,\r\n    133,\r\n    1,\r\n    160,\r\n    5,\r\n    161,\r\n    5,\r\n    518,\r\n    0,\r\n    519,\r\n    0,\r\n    546,\r\n    4,\r\n    550,\r\n    4,\r\n    645,\r\n    3,\r\n    647,\r\n    3,\r\n    672,\r\n    5,\r\n    673,\r\n    5,\r\n    674,\r\n    4,\r\n    677,\r\n    3,\r\n    678,\r\n    4,\r\n    679,\r\n    3,\r\n    680,\r\n    13,\r\n    681,\r\n    13,\r\n    682,\r\n    12,\r\n    685,\r\n    14,\r\n    686,\r\n    12,\r\n    687,\r\n    14,\r\n    712,\r\n    20,\r\n    714,\r\n    18,\r\n    809,\r\n    21,\r\n    813,\r\n    23,\r\n    840,\r\n    20,\r\n    841,\r\n    21,\r\n    1198,\r\n    19,\r\n    1199,\r\n    22,\r\n    1226,\r\n    18,\r\n    1230,\r\n    19,\r\n    1325,\r\n    23,\r\n    1327,\r\n    22,\r\n    1352,\r\n    15,\r\n    1353,\r\n    17,\r\n    1354,\r\n    15,\r\n    1357,\r\n    17,\r\n    1358,\r\n    16,\r\n    1359,\r\n    16,\r\n    1360,\r\n    11,\r\n    1361,\r\n    10,\r\n    1362,\r\n    11,\r\n    1365,\r\n    10,\r\n    1366,\r\n    9,\r\n    1367,\r\n    9,\r\n    1392,\r\n    11,\r\n    1394,\r\n    11,\r\n    1489,\r\n    10,\r\n    1493,\r\n    10,\r\n    1520,\r\n    8,\r\n    1521,\r\n    8,\r\n    1878,\r\n    9,\r\n    1879,\r\n    9,\r\n    1906,\r\n    7,\r\n    1910,\r\n    7,\r\n    2005,\r\n    6,\r\n    2007,\r\n    6,\r\n    2032,\r\n    8,\r\n    2033,\r\n    8,\r\n    2034,\r\n    7,\r\n    2037,\r\n    6,\r\n    2038,\r\n    7,\r\n    2039,\r\n    6,\r\n];\r\nvar p3D = [\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    -1,\r\n    0,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    -1,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    2,\r\n    1,\r\n    0,\r\n    3,\r\n    1,\r\n    2,\r\n    0,\r\n    1,\r\n    3,\r\n    2,\r\n    0,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    3,\r\n    0,\r\n    2,\r\n    1,\r\n    3,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n];\r\n\n\n//# sourceURL=webpack:///./node_modules/open-simplex-noise/lib/3d.js?");

/***/ }),

/***/ "./node_modules/open-simplex-noise/lib/4d.js":
/*!***************************************************!*\
  !*** ./node_modules/open-simplex-noise/lib/4d.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\n// This is free and unencumbered software released into the public domain\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.makeNoise4D = void 0;\r\nvar shuffle_seed_1 = __webpack_require__(/*! ./shuffle_seed */ \"./node_modules/open-simplex-noise/lib/shuffle_seed.js\");\r\nvar NORM_4D = 1.0 / 30.0;\r\nvar SQUISH_4D = (Math.sqrt(4 + 1) - 1) / 4;\r\nvar STRETCH_4D = (1 / Math.sqrt(4 + 1) - 1) / 4;\r\nfunction contribution4D(multiplier, xsb, ysb, zsb, wsb) {\r\n    return {\r\n        dx: -xsb - multiplier * SQUISH_4D,\r\n        dy: -ysb - multiplier * SQUISH_4D,\r\n        dz: -zsb - multiplier * SQUISH_4D,\r\n        dw: -wsb - multiplier * SQUISH_4D,\r\n        xsb: xsb,\r\n        ysb: ysb,\r\n        zsb: zsb,\r\n        wsb: wsb,\r\n    };\r\n}\r\nfunction makeNoise4D(clientSeed) {\r\n    var contributions = [];\r\n    for (var i = 0; i < p4D.length; i += 16) {\r\n        var baseSet = base4D[p4D[i]];\r\n        var previous = null;\r\n        var current = null;\r\n        for (var k = 0; k < baseSet.length; k += 5) {\r\n            current = contribution4D(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3], baseSet[k + 4]);\r\n            if (previous === null)\r\n                contributions[i / 16] = current;\r\n            else\r\n                previous.next = current;\r\n            previous = current;\r\n        }\r\n        current.next = contribution4D(p4D[i + 1], p4D[i + 2], p4D[i + 3], p4D[i + 4], p4D[i + 5]);\r\n        current.next.next = contribution4D(p4D[i + 6], p4D[i + 7], p4D[i + 8], p4D[i + 9], p4D[i + 10]);\r\n        current.next.next.next = contribution4D(p4D[i + 11], p4D[i + 12], p4D[i + 13], p4D[i + 14], p4D[i + 15]);\r\n    }\r\n    var lookup = [];\r\n    for (var i = 0; i < lookupPairs4D.length; i += 2) {\r\n        lookup[lookupPairs4D[i]] = contributions[lookupPairs4D[i + 1]];\r\n    }\r\n    var perm = new Uint8Array(256);\r\n    var perm4D = new Uint8Array(256);\r\n    var source = new Uint8Array(256);\r\n    for (var i = 0; i < 256; i++)\r\n        source[i] = i;\r\n    var seed = new Uint32Array(1);\r\n    seed[0] = clientSeed;\r\n    seed = shuffle_seed_1.default(shuffle_seed_1.default(shuffle_seed_1.default(seed)));\r\n    for (var i = 255; i >= 0; i--) {\r\n        seed = shuffle_seed_1.default(seed);\r\n        var r = new Uint32Array(1);\r\n        r[0] = (seed[0] + 31) % (i + 1);\r\n        if (r[0] < 0)\r\n            r[0] += i + 1;\r\n        perm[i] = source[r[0]];\r\n        perm4D[i] = perm[i] & 0xfc;\r\n        source[r[0]] = source[i];\r\n    }\r\n    return function (x, y, z, w) {\r\n        var stretchOffset = (x + y + z + w) * STRETCH_4D;\r\n        var xs = x + stretchOffset;\r\n        var ys = y + stretchOffset;\r\n        var zs = z + stretchOffset;\r\n        var ws = w + stretchOffset;\r\n        var xsb = Math.floor(xs);\r\n        var ysb = Math.floor(ys);\r\n        var zsb = Math.floor(zs);\r\n        var wsb = Math.floor(ws);\r\n        var squishOffset = (xsb + ysb + zsb + wsb) * SQUISH_4D;\r\n        var dx0 = x - (xsb + squishOffset);\r\n        var dy0 = y - (ysb + squishOffset);\r\n        var dz0 = z - (zsb + squishOffset);\r\n        var dw0 = w - (wsb + squishOffset);\r\n        var xins = xs - xsb;\r\n        var yins = ys - ysb;\r\n        var zins = zs - zsb;\r\n        var wins = ws - wsb;\r\n        var inSum = xins + yins + zins + wins;\r\n        var hash = (zins - wins + 1) |\r\n            ((yins - zins + 1) << 1) |\r\n            ((yins - wins + 1) << 2) |\r\n            ((xins - yins + 1) << 3) |\r\n            ((xins - zins + 1) << 4) |\r\n            ((xins - wins + 1) << 5) |\r\n            (inSum << 6) |\r\n            ((inSum + wins) << 8) |\r\n            ((inSum + zins) << 11) |\r\n            ((inSum + yins) << 14) |\r\n            ((inSum + xins) << 17);\r\n        var value = 0;\r\n        for (var c = lookup[hash]; c !== undefined; c = c.next) {\r\n            var dx = dx0 + c.dx;\r\n            var dy = dy0 + c.dy;\r\n            var dz = dz0 + c.dz;\r\n            var dw = dw0 + c.dw;\r\n            var attn = 2 - dx * dx - dy * dy - dz * dz - dw * dw;\r\n            if (attn > 0) {\r\n                var px = xsb + c.xsb;\r\n                var py = ysb + c.ysb;\r\n                var pz = zsb + c.zsb;\r\n                var pw = wsb + c.wsb;\r\n                var indexPartA = perm[px & 0xff];\r\n                var indexPartB = perm[(indexPartA + py) & 0xff];\r\n                var indexPartC = perm[(indexPartB + pz) & 0xff];\r\n                var index = perm4D[(indexPartC + pw) & 0xff];\r\n                var valuePart = gradients4D[index] * dx +\r\n                    gradients4D[index + 1] * dy +\r\n                    gradients4D[index + 2] * dz +\r\n                    gradients4D[index + 3] * dw;\r\n                value += attn * attn * attn * attn * valuePart;\r\n            }\r\n        }\r\n        return value * NORM_4D;\r\n    };\r\n}\r\nexports.makeNoise4D = makeNoise4D;\r\nvar base4D = [\r\n    [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1],\r\n    [3, 1, 1, 1, 0, 3, 1, 1, 0, 1, 3, 1, 0, 1, 1, 3, 0, 1, 1, 1, 4, 1, 1, 1, 1],\r\n    [\r\n        1,\r\n        1,\r\n        0,\r\n        0,\r\n        0,\r\n        1,\r\n        0,\r\n        1,\r\n        0,\r\n        0,\r\n        1,\r\n        0,\r\n        0,\r\n        1,\r\n        0,\r\n        1,\r\n        0,\r\n        0,\r\n        0,\r\n        1,\r\n        2,\r\n        1,\r\n        1,\r\n        0,\r\n        0,\r\n        2,\r\n        1,\r\n        0,\r\n        1,\r\n        0,\r\n        2,\r\n        1,\r\n        0,\r\n        0,\r\n        1,\r\n        2,\r\n        0,\r\n        1,\r\n        1,\r\n        0,\r\n        2,\r\n        0,\r\n        1,\r\n        0,\r\n        1,\r\n        2,\r\n        0,\r\n        0,\r\n        1,\r\n        1,\r\n    ],\r\n    [\r\n        3,\r\n        1,\r\n        1,\r\n        1,\r\n        0,\r\n        3,\r\n        1,\r\n        1,\r\n        0,\r\n        1,\r\n        3,\r\n        1,\r\n        0,\r\n        1,\r\n        1,\r\n        3,\r\n        0,\r\n        1,\r\n        1,\r\n        1,\r\n        2,\r\n        1,\r\n        1,\r\n        0,\r\n        0,\r\n        2,\r\n        1,\r\n        0,\r\n        1,\r\n        0,\r\n        2,\r\n        1,\r\n        0,\r\n        0,\r\n        1,\r\n        2,\r\n        0,\r\n        1,\r\n        1,\r\n        0,\r\n        2,\r\n        0,\r\n        1,\r\n        0,\r\n        1,\r\n        2,\r\n        0,\r\n        0,\r\n        1,\r\n        1,\r\n    ],\r\n];\r\nvar gradients4D = [\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    -3,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    -3,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    -3,\r\n    -1,\r\n    1,\r\n    1,\r\n    -1,\r\n    -3,\r\n    1,\r\n    1,\r\n    -1,\r\n    -1,\r\n    3,\r\n    1,\r\n    -1,\r\n    -1,\r\n    1,\r\n    3,\r\n    3,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    -3,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    -3,\r\n    1,\r\n    -1,\r\n    1,\r\n    -1,\r\n    3,\r\n    -1,\r\n    1,\r\n    -1,\r\n    1,\r\n    -3,\r\n    1,\r\n    -1,\r\n    1,\r\n    -1,\r\n    3,\r\n    3,\r\n    -1,\r\n    -1,\r\n    1,\r\n    1,\r\n    -3,\r\n    -1,\r\n    1,\r\n    1,\r\n    -1,\r\n    -3,\r\n    1,\r\n    1,\r\n    -1,\r\n    -1,\r\n    3,\r\n    -3,\r\n    -1,\r\n    -1,\r\n    1,\r\n    -1,\r\n    -3,\r\n    -1,\r\n    1,\r\n    -1,\r\n    -1,\r\n    -3,\r\n    1,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    3,\r\n    3,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    -3,\r\n    -3,\r\n    1,\r\n    1,\r\n    -1,\r\n    -1,\r\n    3,\r\n    1,\r\n    -1,\r\n    -1,\r\n    1,\r\n    3,\r\n    -1,\r\n    -1,\r\n    1,\r\n    1,\r\n    -3,\r\n    3,\r\n    -1,\r\n    1,\r\n    -1,\r\n    1,\r\n    -3,\r\n    1,\r\n    -1,\r\n    1,\r\n    -1,\r\n    3,\r\n    -1,\r\n    1,\r\n    -1,\r\n    1,\r\n    -3,\r\n    -3,\r\n    -1,\r\n    1,\r\n    -1,\r\n    -1,\r\n    -3,\r\n    1,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    3,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    1,\r\n    -3,\r\n    3,\r\n    1,\r\n    -1,\r\n    -1,\r\n    1,\r\n    3,\r\n    -1,\r\n    -1,\r\n    1,\r\n    1,\r\n    -3,\r\n    -1,\r\n    1,\r\n    1,\r\n    -1,\r\n    -3,\r\n    -3,\r\n    1,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    3,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    1,\r\n    -3,\r\n    -1,\r\n    -1,\r\n    1,\r\n    -1,\r\n    -3,\r\n    3,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    1,\r\n    -3,\r\n    -1,\r\n    -1,\r\n    1,\r\n    -1,\r\n    -3,\r\n    -1,\r\n    1,\r\n    -1,\r\n    -1,\r\n    -3,\r\n    -3,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    -3,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    -3,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    -3,\r\n];\r\nvar lookupPairs4D = [\r\n    0,\r\n    3,\r\n    1,\r\n    2,\r\n    2,\r\n    3,\r\n    5,\r\n    2,\r\n    6,\r\n    1,\r\n    7,\r\n    1,\r\n    8,\r\n    3,\r\n    9,\r\n    2,\r\n    10,\r\n    3,\r\n    13,\r\n    2,\r\n    16,\r\n    3,\r\n    18,\r\n    3,\r\n    22,\r\n    1,\r\n    23,\r\n    1,\r\n    24,\r\n    3,\r\n    26,\r\n    3,\r\n    33,\r\n    2,\r\n    37,\r\n    2,\r\n    38,\r\n    1,\r\n    39,\r\n    1,\r\n    41,\r\n    2,\r\n    45,\r\n    2,\r\n    54,\r\n    1,\r\n    55,\r\n    1,\r\n    56,\r\n    0,\r\n    57,\r\n    0,\r\n    58,\r\n    0,\r\n    59,\r\n    0,\r\n    60,\r\n    0,\r\n    61,\r\n    0,\r\n    62,\r\n    0,\r\n    63,\r\n    0,\r\n    256,\r\n    3,\r\n    258,\r\n    3,\r\n    264,\r\n    3,\r\n    266,\r\n    3,\r\n    272,\r\n    3,\r\n    274,\r\n    3,\r\n    280,\r\n    3,\r\n    282,\r\n    3,\r\n    2049,\r\n    2,\r\n    2053,\r\n    2,\r\n    2057,\r\n    2,\r\n    2061,\r\n    2,\r\n    2081,\r\n    2,\r\n    2085,\r\n    2,\r\n    2089,\r\n    2,\r\n    2093,\r\n    2,\r\n    2304,\r\n    9,\r\n    2305,\r\n    9,\r\n    2312,\r\n    9,\r\n    2313,\r\n    9,\r\n    16390,\r\n    1,\r\n    16391,\r\n    1,\r\n    16406,\r\n    1,\r\n    16407,\r\n    1,\r\n    16422,\r\n    1,\r\n    16423,\r\n    1,\r\n    16438,\r\n    1,\r\n    16439,\r\n    1,\r\n    16642,\r\n    8,\r\n    16646,\r\n    8,\r\n    16658,\r\n    8,\r\n    16662,\r\n    8,\r\n    18437,\r\n    6,\r\n    18439,\r\n    6,\r\n    18469,\r\n    6,\r\n    18471,\r\n    6,\r\n    18688,\r\n    9,\r\n    18689,\r\n    9,\r\n    18690,\r\n    8,\r\n    18693,\r\n    6,\r\n    18694,\r\n    8,\r\n    18695,\r\n    6,\r\n    18696,\r\n    9,\r\n    18697,\r\n    9,\r\n    18706,\r\n    8,\r\n    18710,\r\n    8,\r\n    18725,\r\n    6,\r\n    18727,\r\n    6,\r\n    131128,\r\n    0,\r\n    131129,\r\n    0,\r\n    131130,\r\n    0,\r\n    131131,\r\n    0,\r\n    131132,\r\n    0,\r\n    131133,\r\n    0,\r\n    131134,\r\n    0,\r\n    131135,\r\n    0,\r\n    131352,\r\n    7,\r\n    131354,\r\n    7,\r\n    131384,\r\n    7,\r\n    131386,\r\n    7,\r\n    133161,\r\n    5,\r\n    133165,\r\n    5,\r\n    133177,\r\n    5,\r\n    133181,\r\n    5,\r\n    133376,\r\n    9,\r\n    133377,\r\n    9,\r\n    133384,\r\n    9,\r\n    133385,\r\n    9,\r\n    133400,\r\n    7,\r\n    133402,\r\n    7,\r\n    133417,\r\n    5,\r\n    133421,\r\n    5,\r\n    133432,\r\n    7,\r\n    133433,\r\n    5,\r\n    133434,\r\n    7,\r\n    133437,\r\n    5,\r\n    147510,\r\n    4,\r\n    147511,\r\n    4,\r\n    147518,\r\n    4,\r\n    147519,\r\n    4,\r\n    147714,\r\n    8,\r\n    147718,\r\n    8,\r\n    147730,\r\n    8,\r\n    147734,\r\n    8,\r\n    147736,\r\n    7,\r\n    147738,\r\n    7,\r\n    147766,\r\n    4,\r\n    147767,\r\n    4,\r\n    147768,\r\n    7,\r\n    147770,\r\n    7,\r\n    147774,\r\n    4,\r\n    147775,\r\n    4,\r\n    149509,\r\n    6,\r\n    149511,\r\n    6,\r\n    149541,\r\n    6,\r\n    149543,\r\n    6,\r\n    149545,\r\n    5,\r\n    149549,\r\n    5,\r\n    149558,\r\n    4,\r\n    149559,\r\n    4,\r\n    149561,\r\n    5,\r\n    149565,\r\n    5,\r\n    149566,\r\n    4,\r\n    149567,\r\n    4,\r\n    149760,\r\n    9,\r\n    149761,\r\n    9,\r\n    149762,\r\n    8,\r\n    149765,\r\n    6,\r\n    149766,\r\n    8,\r\n    149767,\r\n    6,\r\n    149768,\r\n    9,\r\n    149769,\r\n    9,\r\n    149778,\r\n    8,\r\n    149782,\r\n    8,\r\n    149784,\r\n    7,\r\n    149786,\r\n    7,\r\n    149797,\r\n    6,\r\n    149799,\r\n    6,\r\n    149801,\r\n    5,\r\n    149805,\r\n    5,\r\n    149814,\r\n    4,\r\n    149815,\r\n    4,\r\n    149816,\r\n    7,\r\n    149817,\r\n    5,\r\n    149818,\r\n    7,\r\n    149821,\r\n    5,\r\n    149822,\r\n    4,\r\n    149823,\r\n    4,\r\n    149824,\r\n    37,\r\n    149825,\r\n    37,\r\n    149826,\r\n    36,\r\n    149829,\r\n    34,\r\n    149830,\r\n    36,\r\n    149831,\r\n    34,\r\n    149832,\r\n    37,\r\n    149833,\r\n    37,\r\n    149842,\r\n    36,\r\n    149846,\r\n    36,\r\n    149848,\r\n    35,\r\n    149850,\r\n    35,\r\n    149861,\r\n    34,\r\n    149863,\r\n    34,\r\n    149865,\r\n    33,\r\n    149869,\r\n    33,\r\n    149878,\r\n    32,\r\n    149879,\r\n    32,\r\n    149880,\r\n    35,\r\n    149881,\r\n    33,\r\n    149882,\r\n    35,\r\n    149885,\r\n    33,\r\n    149886,\r\n    32,\r\n    149887,\r\n    32,\r\n    150080,\r\n    49,\r\n    150082,\r\n    48,\r\n    150088,\r\n    49,\r\n    150098,\r\n    48,\r\n    150104,\r\n    47,\r\n    150106,\r\n    47,\r\n    151873,\r\n    46,\r\n    151877,\r\n    45,\r\n    151881,\r\n    46,\r\n    151909,\r\n    45,\r\n    151913,\r\n    44,\r\n    151917,\r\n    44,\r\n    152128,\r\n    49,\r\n    152129,\r\n    46,\r\n    152136,\r\n    49,\r\n    152137,\r\n    46,\r\n    166214,\r\n    43,\r\n    166215,\r\n    42,\r\n    166230,\r\n    43,\r\n    166247,\r\n    42,\r\n    166262,\r\n    41,\r\n    166263,\r\n    41,\r\n    166466,\r\n    48,\r\n    166470,\r\n    43,\r\n    166482,\r\n    48,\r\n    166486,\r\n    43,\r\n    168261,\r\n    45,\r\n    168263,\r\n    42,\r\n    168293,\r\n    45,\r\n    168295,\r\n    42,\r\n    168512,\r\n    31,\r\n    168513,\r\n    28,\r\n    168514,\r\n    31,\r\n    168517,\r\n    28,\r\n    168518,\r\n    25,\r\n    168519,\r\n    25,\r\n    280952,\r\n    40,\r\n    280953,\r\n    39,\r\n    280954,\r\n    40,\r\n    280957,\r\n    39,\r\n    280958,\r\n    38,\r\n    280959,\r\n    38,\r\n    281176,\r\n    47,\r\n    281178,\r\n    47,\r\n    281208,\r\n    40,\r\n    281210,\r\n    40,\r\n    282985,\r\n    44,\r\n    282989,\r\n    44,\r\n    283001,\r\n    39,\r\n    283005,\r\n    39,\r\n    283208,\r\n    30,\r\n    283209,\r\n    27,\r\n    283224,\r\n    30,\r\n    283241,\r\n    27,\r\n    283256,\r\n    22,\r\n    283257,\r\n    22,\r\n    297334,\r\n    41,\r\n    297335,\r\n    41,\r\n    297342,\r\n    38,\r\n    297343,\r\n    38,\r\n    297554,\r\n    29,\r\n    297558,\r\n    24,\r\n    297562,\r\n    29,\r\n    297590,\r\n    24,\r\n    297594,\r\n    21,\r\n    297598,\r\n    21,\r\n    299365,\r\n    26,\r\n    299367,\r\n    23,\r\n    299373,\r\n    26,\r\n    299383,\r\n    23,\r\n    299389,\r\n    20,\r\n    299391,\r\n    20,\r\n    299584,\r\n    31,\r\n    299585,\r\n    28,\r\n    299586,\r\n    31,\r\n    299589,\r\n    28,\r\n    299590,\r\n    25,\r\n    299591,\r\n    25,\r\n    299592,\r\n    30,\r\n    299593,\r\n    27,\r\n    299602,\r\n    29,\r\n    299606,\r\n    24,\r\n    299608,\r\n    30,\r\n    299610,\r\n    29,\r\n    299621,\r\n    26,\r\n    299623,\r\n    23,\r\n    299625,\r\n    27,\r\n    299629,\r\n    26,\r\n    299638,\r\n    24,\r\n    299639,\r\n    23,\r\n    299640,\r\n    22,\r\n    299641,\r\n    22,\r\n    299642,\r\n    21,\r\n    299645,\r\n    20,\r\n    299646,\r\n    21,\r\n    299647,\r\n    20,\r\n    299648,\r\n    61,\r\n    299649,\r\n    60,\r\n    299650,\r\n    61,\r\n    299653,\r\n    60,\r\n    299654,\r\n    59,\r\n    299655,\r\n    59,\r\n    299656,\r\n    58,\r\n    299657,\r\n    57,\r\n    299666,\r\n    55,\r\n    299670,\r\n    54,\r\n    299672,\r\n    58,\r\n    299674,\r\n    55,\r\n    299685,\r\n    52,\r\n    299687,\r\n    51,\r\n    299689,\r\n    57,\r\n    299693,\r\n    52,\r\n    299702,\r\n    54,\r\n    299703,\r\n    51,\r\n    299704,\r\n    56,\r\n    299705,\r\n    56,\r\n    299706,\r\n    53,\r\n    299709,\r\n    50,\r\n    299710,\r\n    53,\r\n    299711,\r\n    50,\r\n    299904,\r\n    61,\r\n    299906,\r\n    61,\r\n    299912,\r\n    58,\r\n    299922,\r\n    55,\r\n    299928,\r\n    58,\r\n    299930,\r\n    55,\r\n    301697,\r\n    60,\r\n    301701,\r\n    60,\r\n    301705,\r\n    57,\r\n    301733,\r\n    52,\r\n    301737,\r\n    57,\r\n    301741,\r\n    52,\r\n    301952,\r\n    79,\r\n    301953,\r\n    79,\r\n    301960,\r\n    76,\r\n    301961,\r\n    76,\r\n    316038,\r\n    59,\r\n    316039,\r\n    59,\r\n    316054,\r\n    54,\r\n    316071,\r\n    51,\r\n    316086,\r\n    54,\r\n    316087,\r\n    51,\r\n    316290,\r\n    78,\r\n    316294,\r\n    78,\r\n    316306,\r\n    73,\r\n    316310,\r\n    73,\r\n    318085,\r\n    77,\r\n    318087,\r\n    77,\r\n    318117,\r\n    70,\r\n    318119,\r\n    70,\r\n    318336,\r\n    79,\r\n    318337,\r\n    79,\r\n    318338,\r\n    78,\r\n    318341,\r\n    77,\r\n    318342,\r\n    78,\r\n    318343,\r\n    77,\r\n    430776,\r\n    56,\r\n    430777,\r\n    56,\r\n    430778,\r\n    53,\r\n    430781,\r\n    50,\r\n    430782,\r\n    53,\r\n    430783,\r\n    50,\r\n    431000,\r\n    75,\r\n    431002,\r\n    72,\r\n    431032,\r\n    75,\r\n    431034,\r\n    72,\r\n    432809,\r\n    74,\r\n    432813,\r\n    69,\r\n    432825,\r\n    74,\r\n    432829,\r\n    69,\r\n    433032,\r\n    76,\r\n    433033,\r\n    76,\r\n    433048,\r\n    75,\r\n    433065,\r\n    74,\r\n    433080,\r\n    75,\r\n    433081,\r\n    74,\r\n    447158,\r\n    71,\r\n    447159,\r\n    68,\r\n    447166,\r\n    71,\r\n    447167,\r\n    68,\r\n    447378,\r\n    73,\r\n    447382,\r\n    73,\r\n    447386,\r\n    72,\r\n    447414,\r\n    71,\r\n    447418,\r\n    72,\r\n    447422,\r\n    71,\r\n    449189,\r\n    70,\r\n    449191,\r\n    70,\r\n    449197,\r\n    69,\r\n    449207,\r\n    68,\r\n    449213,\r\n    69,\r\n    449215,\r\n    68,\r\n    449408,\r\n    67,\r\n    449409,\r\n    67,\r\n    449410,\r\n    66,\r\n    449413,\r\n    64,\r\n    449414,\r\n    66,\r\n    449415,\r\n    64,\r\n    449416,\r\n    67,\r\n    449417,\r\n    67,\r\n    449426,\r\n    66,\r\n    449430,\r\n    66,\r\n    449432,\r\n    65,\r\n    449434,\r\n    65,\r\n    449445,\r\n    64,\r\n    449447,\r\n    64,\r\n    449449,\r\n    63,\r\n    449453,\r\n    63,\r\n    449462,\r\n    62,\r\n    449463,\r\n    62,\r\n    449464,\r\n    65,\r\n    449465,\r\n    63,\r\n    449466,\r\n    65,\r\n    449469,\r\n    63,\r\n    449470,\r\n    62,\r\n    449471,\r\n    62,\r\n    449472,\r\n    19,\r\n    449473,\r\n    19,\r\n    449474,\r\n    18,\r\n    449477,\r\n    16,\r\n    449478,\r\n    18,\r\n    449479,\r\n    16,\r\n    449480,\r\n    19,\r\n    449481,\r\n    19,\r\n    449490,\r\n    18,\r\n    449494,\r\n    18,\r\n    449496,\r\n    17,\r\n    449498,\r\n    17,\r\n    449509,\r\n    16,\r\n    449511,\r\n    16,\r\n    449513,\r\n    15,\r\n    449517,\r\n    15,\r\n    449526,\r\n    14,\r\n    449527,\r\n    14,\r\n    449528,\r\n    17,\r\n    449529,\r\n    15,\r\n    449530,\r\n    17,\r\n    449533,\r\n    15,\r\n    449534,\r\n    14,\r\n    449535,\r\n    14,\r\n    449728,\r\n    19,\r\n    449729,\r\n    19,\r\n    449730,\r\n    18,\r\n    449734,\r\n    18,\r\n    449736,\r\n    19,\r\n    449737,\r\n    19,\r\n    449746,\r\n    18,\r\n    449750,\r\n    18,\r\n    449752,\r\n    17,\r\n    449754,\r\n    17,\r\n    449784,\r\n    17,\r\n    449786,\r\n    17,\r\n    451520,\r\n    19,\r\n    451521,\r\n    19,\r\n    451525,\r\n    16,\r\n    451527,\r\n    16,\r\n    451528,\r\n    19,\r\n    451529,\r\n    19,\r\n    451557,\r\n    16,\r\n    451559,\r\n    16,\r\n    451561,\r\n    15,\r\n    451565,\r\n    15,\r\n    451577,\r\n    15,\r\n    451581,\r\n    15,\r\n    451776,\r\n    19,\r\n    451777,\r\n    19,\r\n    451784,\r\n    19,\r\n    451785,\r\n    19,\r\n    465858,\r\n    18,\r\n    465861,\r\n    16,\r\n    465862,\r\n    18,\r\n    465863,\r\n    16,\r\n    465874,\r\n    18,\r\n    465878,\r\n    18,\r\n    465893,\r\n    16,\r\n    465895,\r\n    16,\r\n    465910,\r\n    14,\r\n    465911,\r\n    14,\r\n    465918,\r\n    14,\r\n    465919,\r\n    14,\r\n    466114,\r\n    18,\r\n    466118,\r\n    18,\r\n    466130,\r\n    18,\r\n    466134,\r\n    18,\r\n    467909,\r\n    16,\r\n    467911,\r\n    16,\r\n    467941,\r\n    16,\r\n    467943,\r\n    16,\r\n    468160,\r\n    13,\r\n    468161,\r\n    13,\r\n    468162,\r\n    13,\r\n    468163,\r\n    13,\r\n    468164,\r\n    13,\r\n    468165,\r\n    13,\r\n    468166,\r\n    13,\r\n    468167,\r\n    13,\r\n    580568,\r\n    17,\r\n    580570,\r\n    17,\r\n    580585,\r\n    15,\r\n    580589,\r\n    15,\r\n    580598,\r\n    14,\r\n    580599,\r\n    14,\r\n    580600,\r\n    17,\r\n    580601,\r\n    15,\r\n    580602,\r\n    17,\r\n    580605,\r\n    15,\r\n    580606,\r\n    14,\r\n    580607,\r\n    14,\r\n    580824,\r\n    17,\r\n    580826,\r\n    17,\r\n    580856,\r\n    17,\r\n    580858,\r\n    17,\r\n    582633,\r\n    15,\r\n    582637,\r\n    15,\r\n    582649,\r\n    15,\r\n    582653,\r\n    15,\r\n    582856,\r\n    12,\r\n    582857,\r\n    12,\r\n    582872,\r\n    12,\r\n    582873,\r\n    12,\r\n    582888,\r\n    12,\r\n    582889,\r\n    12,\r\n    582904,\r\n    12,\r\n    582905,\r\n    12,\r\n    596982,\r\n    14,\r\n    596983,\r\n    14,\r\n    596990,\r\n    14,\r\n    596991,\r\n    14,\r\n    597202,\r\n    11,\r\n    597206,\r\n    11,\r\n    597210,\r\n    11,\r\n    597214,\r\n    11,\r\n    597234,\r\n    11,\r\n    597238,\r\n    11,\r\n    597242,\r\n    11,\r\n    597246,\r\n    11,\r\n    599013,\r\n    10,\r\n    599015,\r\n    10,\r\n    599021,\r\n    10,\r\n    599023,\r\n    10,\r\n    599029,\r\n    10,\r\n    599031,\r\n    10,\r\n    599037,\r\n    10,\r\n    599039,\r\n    10,\r\n    599232,\r\n    13,\r\n    599233,\r\n    13,\r\n    599234,\r\n    13,\r\n    599235,\r\n    13,\r\n    599236,\r\n    13,\r\n    599237,\r\n    13,\r\n    599238,\r\n    13,\r\n    599239,\r\n    13,\r\n    599240,\r\n    12,\r\n    599241,\r\n    12,\r\n    599250,\r\n    11,\r\n    599254,\r\n    11,\r\n    599256,\r\n    12,\r\n    599257,\r\n    12,\r\n    599258,\r\n    11,\r\n    599262,\r\n    11,\r\n    599269,\r\n    10,\r\n    599271,\r\n    10,\r\n    599272,\r\n    12,\r\n    599273,\r\n    12,\r\n    599277,\r\n    10,\r\n    599279,\r\n    10,\r\n    599282,\r\n    11,\r\n    599285,\r\n    10,\r\n    599286,\r\n    11,\r\n    599287,\r\n    10,\r\n    599288,\r\n    12,\r\n    599289,\r\n    12,\r\n    599290,\r\n    11,\r\n    599293,\r\n    10,\r\n    599294,\r\n    11,\r\n    599295,\r\n    10,\r\n];\r\nvar p4D = [\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    -1,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    -1,\r\n    0,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    -1,\r\n    0,\r\n    0,\r\n    -1,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    -1,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    -1,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    4,\r\n    2,\r\n    1,\r\n    1,\r\n    0,\r\n    4,\r\n    1,\r\n    2,\r\n    1,\r\n    0,\r\n    4,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    1,\r\n    4,\r\n    2,\r\n    1,\r\n    0,\r\n    1,\r\n    4,\r\n    1,\r\n    2,\r\n    0,\r\n    1,\r\n    4,\r\n    1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    4,\r\n    2,\r\n    0,\r\n    1,\r\n    1,\r\n    4,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    4,\r\n    1,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    4,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    4,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    4,\r\n    0,\r\n    1,\r\n    1,\r\n    2,\r\n    1,\r\n    2,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    3,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    3,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    3,\r\n    2,\r\n    0,\r\n    1,\r\n    0,\r\n    3,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    3,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    3,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    3,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    2,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    3,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    3,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    3,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    3,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    3,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    3,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    3,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    3,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    4,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    0,\r\n    1,\r\n    0,\r\n    3,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    4,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    3,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    4,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    4,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    3,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    4,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    3,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    4,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    3,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    3,\r\n    2,\r\n    0,\r\n    1,\r\n    0,\r\n    3,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    3,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    3,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    3,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    3,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    3,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    0,\r\n    1,\r\n    0,\r\n    3,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    3,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    3,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    3,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    3,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n];\r\n\n\n//# sourceURL=webpack:///./node_modules/open-simplex-noise/lib/4d.js?");

/***/ }),

/***/ "./node_modules/open-simplex-noise/lib/mod.js":
/*!****************************************************!*\
  !*** ./node_modules/open-simplex-noise/lib/mod.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\n// This is free and unencumbered software released into the public domain\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.makeNoise4D = exports.makeNoise3D = exports.makeNoise2D = void 0;\r\nvar _2d_1 = __webpack_require__(/*! ./2d */ \"./node_modules/open-simplex-noise/lib/2d.js\");\r\nObject.defineProperty(exports, \"makeNoise2D\", ({ enumerable: true, get: function () { return _2d_1.makeNoise2D; } }));\r\nvar _3d_1 = __webpack_require__(/*! ./3d */ \"./node_modules/open-simplex-noise/lib/3d.js\");\r\nObject.defineProperty(exports, \"makeNoise3D\", ({ enumerable: true, get: function () { return _3d_1.makeNoise3D; } }));\r\nvar _4d_1 = __webpack_require__(/*! ./4d */ \"./node_modules/open-simplex-noise/lib/4d.js\");\r\nObject.defineProperty(exports, \"makeNoise4D\", ({ enumerable: true, get: function () { return _4d_1.makeNoise4D; } }));\r\n\n\n//# sourceURL=webpack:///./node_modules/open-simplex-noise/lib/mod.js?");

/***/ }),

/***/ "./node_modules/open-simplex-noise/lib/shuffle_seed.js":
/*!*************************************************************!*\
  !*** ./node_modules/open-simplex-noise/lib/shuffle_seed.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\n// This is free and unencumbered software released into the public domain\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nfunction shuffleSeed(seed) {\r\n    var newSeed = new Uint32Array(1);\r\n    newSeed[0] = seed[0] * 1664525 + 1013904223;\r\n    return newSeed;\r\n}\r\nexports[\"default\"] = shuffleSeed;\r\n\n\n//# sourceURL=webpack:///./node_modules/open-simplex-noise/lib/shuffle_seed.js?");

/***/ }),

/***/ "./test2.js":
/*!******************!*\
  !*** ./test2.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mapgen_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mapgen.js */ \"./mapgen.js\");\n\r\n\r\nconst terrainType = {\r\n  OCEAN: 'OCEAN',\r\n  SEA: 'SEA',\r\n  WET_SAND: 'WET_SAND',\r\n  SAND: 'SAND',\r\n  DRY_SAND: 'DRY_SAND',\r\n  DRY_GRASS: 'DRY_GRASS',\r\n  GRASS: 'GRASS',\r\n  WET_GRASS: 'WET_GRASS',\r\n  MOUNTAIN_SNOW: 'MOUNTAIN_SNOW',\r\n  MOUNTAIN_ORE: 'MOUNTAIN_ORE',\r\n  MOUNTAIN: 'MOUNTAIN',\r\n  DESERT: 'DESERT',\r\n  RIVER: 'RIVER',\r\n};\r\n\r\nfunction generateMap(width, height, terrainNoise, variantNoise, biomeNoise, generateDeserts) {\r\n  const map = [];\r\n  const heightMap = [];\r\n  \r\n  for (let y = 0; y < height; y++) {\r\n    map[y] = [];\r\n    heightMap[y] = [];\r\n    for (let x = 0; x < width; x++) {\r\n      const terrainValue = terrainNoise(x / 100, y / 100);\r\n      const variantValue = variantNoise(x / 100, y / 100);\r\n      const biomeValue = biomeNoise(x / 100, y / 100);\r\n      let info = {};\r\n\r\n      if (terrainValue < 0) {\r\n        info.color = '#003eb2';\r\n        info.type = terrainType.OCEAN;\r\n      } else if (terrainValue < 0.2) {\r\n        info.color = '#0952c6';\r\n        info.type = terrainType.SEA;\r\n      } else if (terrainValue < 0.22) {\r\n        info.variantNoise = variantValue;\r\n        if (variantValue < -0.2) {\r\n          info.color = '#867645';\r\n          info.type = terrainType.WET_SAND;\r\n        } else if (variantValue < 0.2) {\r\n          info.color = '#a49463';\r\n          info.type = terrainType.SAND;\r\n        } else {\r\n          info.color = '#c2b281';\r\n          info.type = terrainType.DRY_SAND;\r\n        }\r\n      } else if (biomeValue > 0.5 && generateDeserts) {\r\n        info.color = '#f0e68c';\r\n        info.type = terrainType.DESERT;\r\n      } else if (terrainValue < 0.5) {\r\n        info.variantNoise = variantValue;\r\n        if (variantValue < -0.2) {\r\n          info.color = '#284d00';\r\n          info.type = terrainType.DRY_GRASS;\r\n        } else if (variantValue < 0.2) {\r\n          info.color = '#3c6114';\r\n          info.type = terrainType.GRASS;\r\n        } else {\r\n          info.color = '#5a7f32';\r\n          info.type = terrainType.WET_GRASS;\r\n        }\r\n      } else {\r\n        info.variantNoise = variantValue;\r\n        if (variantValue < -0.2) {\r\n          info.color = '#ebebeb';\r\n          info.type = terrainType.MOUNTAIN_SNOW;\r\n        } else if (variantValue < 0.2) {\r\n          info.color = '#8c8e7b';\r\n          info.type = terrainType.MOUNTAIN_ORE;\r\n        } else {\r\n          info.color = '#a0a28f';\r\n          info.type = terrainType.MOUNTAIN;\r\n        }\r\n      }\r\n\r\n      map[y][x] = info;\r\n      heightMap[y][x] = terrainValue;\r\n    }\r\n  }\r\n\r\n  return map;\r\n}\r\n\r\nfunction drawMap(map, cellSize) {\r\n  console.log('Drawing map...');\r\n  const canvas = document.getElementById('map-canvas');\r\n  canvas.width = map[0].length * cellSize;\r\n  canvas.height = map.length * cellSize;\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height); // Очищаем текущую карту\r\n\r\n  for (let y = 0; y < map.length; y++) {\r\n    for (let x = 0; x < map[y].length; x++) {\r\n      const info = map[y][x];\r\n      ctx.fillStyle = info.color;\r\n\r\n      if (info.type === terrainType.RIVER) {\r\n        const width = info.width;\r\n        if (width === 1) {\r\n          ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\r\n        } else if (width === 2) {\r\n          ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\r\n          ctx.fillRect((x - 1) * cellSize, y * cellSize, cellSize, cellSize);\r\n        } else if (width === 3) {\r\n          ctx.fillRect((x - 1) * cellSize, y * cellSize, cellSize, cellSize);\r\n          ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\r\n          ctx.fillRect((x + 1) * cellSize, y * cellSize, cellSize, cellSize);\r\n        }\r\n      } else {\r\n        ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction generateRivers(map, heightMap, averageRiverLength) {\r\n  const width = map[0].length;\r\n  const height = map.length;\r\n  const riverSources = [];\r\n  const directions = [\r\n    { dx: 0, dy: 1 },  // вниз\r\n    { dx: 0, dy: -1 }, // вверх\r\n    { dx: -1, dy: 0 }, // влево\r\n    { dx: 1, dy: 0 },  // вправо\r\n    { dx: 1, dy: 1 },  // вправо-вниз\r\n    { dx: -1, dy: -1 },// влево-вверх\r\n    { dx: -1, dy: 1 }, // влево-вниз\r\n    { dx: 1, dy: -1 }  // вправо-вверх\r\n  ];\r\n\r\n  const oppositeDirections = {\r\n    '0,1': '0,-1',\r\n    '0,-1': '0,1',\r\n    '-1,0': '1,0',\r\n    '1,0': '-1,0',\r\n    '1,1': '-1,-1',\r\n    '-1,-1': '1,1',\r\n    '-1,1': '1,-1',\r\n    '1,-1': '-1,1'\r\n  };\r\n\r\n  for (let y = 0; y < height; y++) {\r\n    for (let x = 0; x < width; x++) {\r\n      if ((map[y][x].type === terrainType.MOUNTAIN || map[y][x].type === terrainType.MOUNTAIN_ORE || map[y][x].type === terrainType.WET_GRASS || map[y][x].type === terrainType.DRY_GRASS || map[y][x].type === terrainType.GRASS) && Math.random() < 0.000085) {\r\n        riverSources.push({ x, y });\r\n      }\r\n    }\r\n  }\r\n\r\n  const riverTerminationProbability = 0.01 / averageRiverLength;\r\n\r\n  riverSources.forEach(source => {\r\n    let current = source;\r\n    let riverDirection = directions[Math.floor(Math.random() * directions.length)];\r\n    const visited = new Set();\r\n    visited.add(`${current.x},${current.y}`);\r\n    let riverLength = 0;\r\n    let previousDirection = null;\r\n\r\n    while (current) {\r\n      map[current.y][current.x].type = terrainType.RIVER;\r\n      map[current.y][current.x].color = '#0952c6';\r\n      map[current.y][current.x].width = Math.min(3, Math.floor(riverLength / 120) + 1);\r\n\r\n      riverLength++;\r\n\r\n      let next = null;\r\n      let minHeight = heightMap[current.y][current.x];\r\n      const possibleDirections = [\r\n        riverDirection,\r\n        { dx: riverDirection.dx + 1, dy: riverDirection.dy },\r\n        { dx: riverDirection.dx - 1, dy: riverDirection.dy },\r\n        { dx: riverDirection.dx, dy: riverDirection.dy + 1 },\r\n        { dx: riverDirection.dx, dy: riverDirection.dy - 1 }\r\n      ].filter(dir => dir.dx >= -1 && dir.dx <= 1 && dir.dy >= -1 && dir.dy <= 1 && `${dir.dx},${dir.dy}` !== oppositeDirections[`${riverDirection.dx},${riverDirection.dy}`] && `${dir.dx},${dir.dy}` !== previousDirection);\r\n\r\n      possibleDirections.sort(() => Math.random() - 0.65);\r\n\r\n      for (const dir of possibleDirections) {\r\n        const ny = current.y + dir.dy;\r\n        const nx = current.x + dir.dx;\r\n        if (ny >= 0 && ny < height && nx >= 0 && nx < width && !visited.has(`${nx},${ny}`)) {\r\n          if (heightMap[ny][nx] < minHeight) {\r\n            minHeight = heightMap[ny][nx];\r\n            next = { x: nx, y: ny };\r\n            previousDirection = `${riverDirection.dx},${riverDirection.dy}`;\r\n            riverDirection = dir;\r\n          } else if (heightMap[ny][nx] === minHeight && Math.random() < 0.005) {\r\n            next = { x: nx, y: ny };\r\n            previousDirection = `${riverDirection.dx},${riverDirection.dy}`;\r\n            riverDirection = dir;\r\n          } else {\r\n            next = { x: nx, y: ny };\r\n          }\r\n        }\r\n      }\r\n\r\n      if (next && (map[next.y][next.x].type === terrainType.OCEAN || map[next.y][next.x].type === terrainType.SEA || map[next.y][next.x].type === terrainType.RIVER)) {\r\n        map[next.y][next.x].type = terrainType.RIVER;\r\n        map[next.y][next.x].color = '#0952c6';\r\n        map[next.y][next.x].width = Math.min(3, Math.floor(riverLength / 120) + 1);\r\n        break;\r\n      }\r\n\r\n      if (Math.random() < riverTerminationProbability) {\r\n        break;\r\n      }\r\n\r\n      if (next) {\r\n        visited.add(`${next.x},${next.y}`);\r\n      }\r\n      current = next;\r\n    }\r\n  });\r\n}\r\n\r\nconst cellSize = 3;\r\n\r\nlet terrainSeed = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.generateRandomSeed)();\r\nlet variantSeed = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.generateRandomSeed)();\r\nlet biomeSeed = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.generateRandomSeed)();\r\n\r\nlet terrainNoise = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.createNoise)(terrainSeed);\r\nlet variantNoise = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.createNoise)(variantSeed);\r\nlet biomeNoise = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.createNoise)(biomeSeed);\r\n\r\nlet getTerrainNoise = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.newFractalNoise)({\r\n  noise: terrainNoise,\r\n  octaves: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultOctaves,\r\n  frequency: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultFrequency,\r\n  persistence: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultPersistence\r\n});\r\n\r\nlet getVariantNoise = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.newFractalNoise)({\r\n  noise: variantNoise,\r\n  octaves: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultOctaves,\r\n  frequency: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultFrequency,\r\n  persistence: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultPersistence\r\n});\r\n\r\nlet getBiomeNoise = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.newFractalNoise)({\r\n  noise: biomeNoise,\r\n  octaves: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultOctaves,\r\n  frequency: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultFrequency,\r\n  persistence: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultPersistence\r\n});\r\n\r\nlet mapGenerated = false;\r\n\r\nfunction createStatusMessage() {\r\n  const canvas = document.getElementById('map-canvas');\r\n  const statusMessage = document.createElement('div');\r\n  statusMessage.id = 'status-message';\r\n  statusMessage.className = 'status-message';\r\n  statusMessage.textContent = 'your map will be here...';\r\n  canvas.appendChild(statusMessage);\r\n  return statusMessage;\r\n}\r\n\r\nfunction drawStatusMessage(message) {\r\n  const statusMessage = document.getElementById('status-message');\r\n  if (!statusMessage) {\r\n    createStatusMessage();\r\n  }\r\n  statusMessage.textContent = message;\r\n}\r\n\r\nfunction hideStatusMessage() {\r\n  const statusMessage = document.getElementById('status-message');\r\n  if (statusMessage) {\r\n    statusMessage.style.display = 'none';\r\n  }\r\n}\r\n\r\nfunction centerStatusMessage() {\r\n  const canvas = document.getElementById('map-canvas');\r\n  const statusMessage = document.getElementById('status-message');\r\n  if (statusMessage) {\r\n    const canvasRect = canvas.getBoundingClientRect();\r\n    statusMessage.style.top = `${canvasRect.top + canvasRect.height / 2}px`;\r\n    statusMessage.style.left = `${canvasRect.left + canvasRect.width / 2}px`;\r\n    statusMessage.style.transform = 'translate(-50%, -50%)';\r\n  }\r\n}\r\n\r\nfunction setupResizeListener() {\r\n  window.addEventListener('resize', centerStatusMessage);\r\n}\r\n\r\nfunction downloadMap() {\r\n  const canvas = document.getElementById('map-canvas');\r\n  const dataURL = canvas.toDataURL('image/png');\r\n  const link = document.createElement('a');\r\n  link.href = dataURL;\r\n  link.download = 'fantasy_map.png';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}\r\n\r\nasync function generateAndDrawMap() {\r\n  const mapWidthInput = document.getElementById('map-width');\r\n  const mapHeightInput = document.getElementById('map-height');\r\n  const generateRiversCheckbox = document.getElementById('generate-rivers');\r\n  const generateDesertsCheckbox = document.getElementById('generate-deserts');\r\n  const mapWidth = parseInt(mapWidthInput.value, 10);\r\n  const mapHeight = parseInt(mapHeightInput.value, 10);\r\n\r\n  console.log('Generating and drawing new map...');\r\n  drawStatusMessage('Generating map...');\r\n  centerStatusMessage();\r\n\r\n  // Обновляем сиды перед каждой генерацией карты\r\n  terrainSeed = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.generateRandomSeed)();\r\n  variantSeed = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.generateRandomSeed)();\r\n  biomeSeed = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.generateRandomSeed)();\r\n\r\n  terrainNoise = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.createNoise)(terrainSeed);\r\n  variantNoise = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.createNoise)(variantSeed);\r\n  biomeNoise = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.createNoise)(biomeSeed);\r\n\r\n  getTerrainNoise = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.newFractalNoise)({\r\n    noise: terrainNoise,\r\n    octaves: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultOctaves,\r\n    frequency: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultFrequency,\r\n    persistence: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultPersistence\r\n  });\r\n\r\n  getVariantNoise = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.newFractalNoise)({\r\n    noise: variantNoise,\r\n    octaves: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultOctaves,\r\n    frequency: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultFrequency,\r\n    persistence: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultPersistence\r\n  });\r\n\r\n  getBiomeNoise = (0,_mapgen_js__WEBPACK_IMPORTED_MODULE_0__.newFractalNoise)({\r\n    noise: biomeNoise,\r\n    octaves: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultOctaves,\r\n    frequency: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultFrequency,\r\n    persistence: _mapgen_js__WEBPACK_IMPORTED_MODULE_0__.defaultPersistence\r\n  });\r\n\r\n  // Добавляем задержку в 1 секунду перед началом генерации карты\r\n  setTimeout(async () => {\r\n    // Генерация карты\r\n    const physmap = await new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(generateMap(mapWidth, mapHeight, getTerrainNoise, getVariantNoise, getBiomeNoise, generateDesertsCheckbox.checked));\r\n      }, 1);\r\n    });\r\n\r\n    if (generateRiversCheckbox.checked) {\r\n      generateRivers(physmap, physmap.map(row => row.map(cell => cell.type === terrainType.MOUNTAIN ? 1 : 0)), 250);\r\n    }\r\n\r\n    drawMap(physmap, cellSize);\r\n    mapGenerated = true;\r\n\r\n    // Скрываем status-message после завершения генерации карты\r\n    hideStatusMessage();\r\n\r\n    // Активируем кнопку скачивания\r\n    const downloadButton = document.getElementById('download-map');\r\n    downloadButton.disabled = false;\r\n  }, 1000); // 1000 миллисекунд = 1 секунда\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  centerStatusMessage();\r\n  setupResizeListener();\r\n  document.getElementById('generate-map').addEventListener('click', generateAndDrawMap);\r\n  document.getElementById('download-map').addEventListener('click', downloadMap);\r\n});\n\n//# sourceURL=webpack:///./test2.js?");

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
/******/ 
/******/ // startup
/******/ // Load entry module and return exports
/******/ // This entry module can't be inlined because the eval devtool is used.
/******/ var __webpack_exports__ = __webpack_require__("./test2.js");
/******/ 
