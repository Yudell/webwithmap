{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAiD;AAEjD,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGF,IAAI,CAACG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACpD;AAEA,SAASC,WAAWA,CAACC,IAAI,EAAE;EACzB,OAAOP,+DAAW,CAACO,IAAI,CAAC;AAC1B;AAEA,SAASC,eAAeA,CAACC,IAAI,EAAE;EAC7B,IACEC,KAAK,GAKHD,IAAI,CALNC,KAAK;IAAAC,aAAA,GAKHF,IAAI,CAJNG,OAAO;IAAPA,OAAO,GAAAD,aAAA,cAAGE,cAAc,GAAAF,aAAA;IAAAG,eAAA,GAItBL,IAAI,CAHNM,SAAS;IAATA,SAAS,GAAAD,eAAA,cAAG,CAAC,GAAAA,eAAA;IAAAE,eAAA,GAGXP,IAAI,CAFNQ,SAAS;IAATA,SAAS,GAAAD,eAAA,cAAGE,gBAAgB,GAAAF,eAAA;IAAAG,iBAAA,GAE1BV,IAAI,CADNW,WAAW;IAAXA,WAAW,GAAAD,iBAAA,cAAGE,kBAAkB,GAAAF,iBAAA;EAGlC,OAAO,SAASG,eAAeA,CAACC,CAAC,EAAEC,CAAC,EAAE;IACpC,IAAIC,KAAK,GAAG,GAAG;IAEf,KAAK,IAAIC,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAGd,OAAO,EAAEc,MAAM,EAAE,EAAE;MAC/C,IAAIC,IAAI,GAAGV,SAAS,GAAGf,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEqB,MAAM,CAAC;MAE1CD,KAAK,IAAIf,KAAK,CACZa,CAAC,GAAGI,IAAI,EACRH,CAAC,GAAGG,IACN,CAAC,IAAIZ,SAAS,GAAGb,IAAI,CAACG,GAAG,CAACe,WAAW,EAAEM,MAAM,CAAC,CAAC;IACjD;IAEA,OAAOD,KAAK,IAAI,CAAC,GAAG,CAAC,GAAGvB,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEO,OAAO,GAAG,CAAC,CAAC,CAAC;EACnD,CAAC;AACH;AAEA,IAAMC,cAAc,GAAG,EAAE;AACzB,IAAMK,gBAAgB,GAAG,GAAG;AAC5B,IAAMG,kBAAkB,GAAG,IAAI;;;;;;;;;;;ACrClB;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,qBAAqB,mBAAO,CAAC,6EAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjKa;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,qBAAqB,mBAAO,CAAC,6EAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnjiBa;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,qBAAqB,mBAAO,CAAC,6EAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;A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","sources":["webpack:///./mapgen.js","webpack:///./node_modules/open-simplex-noise/lib/2d.js","webpack:///./node_modules/open-simplex-noise/lib/3d.js","webpack:///./node_modules/open-simplex-noise/lib/4d.js","webpack:///./node_modules/open-simplex-noise/lib/mod.js","webpack:///./node_modules/open-simplex-noise/lib/shuffle_seed.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///./test2.js"],"sourcesContent":["import { makeNoise2D } from 'open-simplex-noise';\r\n\r\nfunction generateRandomSeed() {\r\n  return Math.floor(Math.random() * Math.pow(2, 32));\r\n}\r\n\r\nfunction createNoise(seed) {\r\n  return makeNoise2D(seed);\r\n}\r\n\r\nfunction newFractalNoise(info) {\r\n  const {\r\n    noise,\r\n    octaves = defaultOctaves,\r\n    amplitude = 1,\r\n    frequency = defaultFrequency,\r\n    persistence = defaultPersistence\r\n  } = info;\r\n\r\n  return function getFractalNoise(x, y) {\r\n    let value = 0.0;\r\n\r\n    for (let octave = 0; octave < octaves; octave++) {\r\n      let freq = frequency * Math.pow(2, octave);\r\n\r\n      value += noise(\r\n        x * freq,\r\n        y * freq\r\n      ) * (amplitude * Math.pow(persistence, octave));\r\n    }\r\n\r\n    return value / (2 - 1 / Math.pow(2, octaves - 1));\r\n  };\r\n}\r\n\r\nconst defaultOctaves = 10;\r\nconst defaultFrequency = 0.2;\r\nconst defaultPersistence = 0.65;\r\n\r\nexport {\r\n  createNoise,\r\n  newFractalNoise,\r\n  defaultOctaves,\r\n  defaultFrequency,\r\n  defaultPersistence,\r\n  generateRandomSeed\r\n};","\"use strict\";\r\n// This is free and unencumbered software released into the public domain\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.makeNoise2D = void 0;\r\nvar shuffle_seed_1 = require(\"./shuffle_seed\");\r\nvar NORM_2D = 1.0 / 47.0;\r\nvar SQUISH_2D = (Math.sqrt(2 + 1) - 1) / 2;\r\nvar STRETCH_2D = (1 / Math.sqrt(2 + 1) - 1) / 2;\r\nfunction contribution2D(multiplier, xsb, ysb) {\r\n    return {\r\n        dx: -xsb - multiplier * SQUISH_2D,\r\n        dy: -ysb - multiplier * SQUISH_2D,\r\n        xsb: xsb,\r\n        ysb: ysb,\r\n    };\r\n}\r\nfunction makeNoise2D(clientSeed) {\r\n    var contributions = [];\r\n    for (var i = 0; i < p2D.length; i += 4) {\r\n        var baseSet = base2D[p2D[i]];\r\n        var previous = null;\r\n        var current = null;\r\n        for (var k = 0; k < baseSet.length; k += 3) {\r\n            current = contribution2D(baseSet[k], baseSet[k + 1], baseSet[k + 2]);\r\n            if (previous === null)\r\n                contributions[i / 4] = current;\r\n            else\r\n                previous.next = current;\r\n            previous = current;\r\n        }\r\n        current.next = contribution2D(p2D[i + 1], p2D[i + 2], p2D[i + 3]);\r\n    }\r\n    var lookup = [];\r\n    for (var i = 0; i < lookupPairs2D.length; i += 2) {\r\n        lookup[lookupPairs2D[i]] = contributions[lookupPairs2D[i + 1]];\r\n    }\r\n    var perm = new Uint8Array(256);\r\n    var perm2D = new Uint8Array(256);\r\n    var source = new Uint8Array(256);\r\n    for (var i = 0; i < 256; i++)\r\n        source[i] = i;\r\n    var seed = new Uint32Array(1);\r\n    seed[0] = clientSeed;\r\n    seed = shuffle_seed_1.default(shuffle_seed_1.default(shuffle_seed_1.default(seed)));\r\n    for (var i = 255; i >= 0; i--) {\r\n        seed = shuffle_seed_1.default(seed);\r\n        var r = new Uint32Array(1);\r\n        r[0] = (seed[0] + 31) % (i + 1);\r\n        if (r[0] < 0)\r\n            r[0] += i + 1;\r\n        perm[i] = source[r[0]];\r\n        perm2D[i] = perm[i] & 0x0e;\r\n        source[r[0]] = source[i];\r\n    }\r\n    return function (x, y) {\r\n        var stretchOffset = (x + y) * STRETCH_2D;\r\n        var xs = x + stretchOffset;\r\n        var ys = y + stretchOffset;\r\n        var xsb = Math.floor(xs);\r\n        var ysb = Math.floor(ys);\r\n        var squishOffset = (xsb + ysb) * SQUISH_2D;\r\n        var dx0 = x - (xsb + squishOffset);\r\n        var dy0 = y - (ysb + squishOffset);\r\n        var xins = xs - xsb;\r\n        var yins = ys - ysb;\r\n        var inSum = xins + yins;\r\n        var hash = (xins - yins + 1) |\r\n            (inSum << 1) |\r\n            ((inSum + yins) << 2) |\r\n            ((inSum + xins) << 4);\r\n        var value = 0;\r\n        for (var c = lookup[hash]; c !== undefined; c = c.next) {\r\n            var dx = dx0 + c.dx;\r\n            var dy = dy0 + c.dy;\r\n            var attn = 2 - dx * dx - dy * dy;\r\n            if (attn > 0) {\r\n                var px = xsb + c.xsb;\r\n                var py = ysb + c.ysb;\r\n                var indexPartA = perm[px & 0xff];\r\n                var index = perm2D[(indexPartA + py) & 0xff];\r\n                var valuePart = gradients2D[index] * dx + gradients2D[index + 1] * dy;\r\n                value += attn * attn * attn * attn * valuePart;\r\n            }\r\n        }\r\n        return value * NORM_2D;\r\n    };\r\n}\r\nexports.makeNoise2D = makeNoise2D;\r\nvar base2D = [\r\n    [1, 1, 0, 1, 0, 1, 0, 0, 0],\r\n    [1, 1, 0, 1, 0, 1, 2, 1, 1],\r\n];\r\nvar gradients2D = [\r\n    5,\r\n    2,\r\n    2,\r\n    5,\r\n    -5,\r\n    2,\r\n    -2,\r\n    5,\r\n    5,\r\n    -2,\r\n    2,\r\n    -5,\r\n    -5,\r\n    -2,\r\n    -2,\r\n    -5,\r\n];\r\nvar lookupPairs2D = [\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    4,\r\n    1,\r\n    17,\r\n    0,\r\n    20,\r\n    2,\r\n    21,\r\n    2,\r\n    22,\r\n    5,\r\n    23,\r\n    5,\r\n    26,\r\n    4,\r\n    39,\r\n    3,\r\n    42,\r\n    4,\r\n    43,\r\n    3,\r\n];\r\nvar p2D = [\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    2,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n];\r\n","\"use strict\";\r\n// This is free and unencumbered software released into the public domain\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.makeNoise3D = void 0;\r\nvar shuffle_seed_1 = require(\"./shuffle_seed\");\r\nvar NORM_3D = 1.0 / 103.0;\r\nvar SQUISH_3D = (Math.sqrt(3 + 1) - 1) / 3;\r\nvar STRETCH_3D = (1 / Math.sqrt(3 + 1) - 1) / 3;\r\nfunction contribution3D(multiplier, xsb, ysb, zsb) {\r\n    return {\r\n        dx: -xsb - multiplier * SQUISH_3D,\r\n        dy: -ysb - multiplier * SQUISH_3D,\r\n        dz: -zsb - multiplier * SQUISH_3D,\r\n        xsb: xsb,\r\n        ysb: ysb,\r\n        zsb: zsb,\r\n    };\r\n}\r\nfunction makeNoise3D(clientSeed) {\r\n    var contributions = [];\r\n    for (var i = 0; i < p3D.length; i += 9) {\r\n        var baseSet = base3D[p3D[i]];\r\n        var previous = null;\r\n        var current = null;\r\n        for (var k = 0; k < baseSet.length; k += 4) {\r\n            current = contribution3D(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3]);\r\n            if (previous === null)\r\n                contributions[i / 9] = current;\r\n            else\r\n                previous.next = current;\r\n            previous = current;\r\n        }\r\n        current.next = contribution3D(p3D[i + 1], p3D[i + 2], p3D[i + 3], p3D[i + 4]);\r\n        current.next.next = contribution3D(p3D[i + 5], p3D[i + 6], p3D[i + 7], p3D[i + 8]);\r\n    }\r\n    var lookup = [];\r\n    for (var i = 0; i < lookupPairs3D.length; i += 2) {\r\n        lookup[lookupPairs3D[i]] = contributions[lookupPairs3D[i + 1]];\r\n    }\r\n    var perm = new Uint8Array(256);\r\n    var perm3D = new Uint8Array(256);\r\n    var source = new Uint8Array(256);\r\n    for (var i = 0; i < 256; i++)\r\n        source[i] = i;\r\n    var seed = new Uint32Array(1);\r\n    seed[0] = clientSeed;\r\n    seed = shuffle_seed_1.default(shuffle_seed_1.default(shuffle_seed_1.default(seed)));\r\n    for (var i = 255; i >= 0; i--) {\r\n        seed = shuffle_seed_1.default(seed);\r\n        var r = new Uint32Array(1);\r\n        r[0] = (seed[0] + 31) % (i + 1);\r\n        if (r[0] < 0)\r\n            r[0] += i + 1;\r\n        perm[i] = source[r[0]];\r\n        perm3D[i] = (perm[i] % 24) * 3;\r\n        source[r[0]] = source[i];\r\n    }\r\n    return function (x, y, z) {\r\n        var stretchOffset = (x + y + z) * STRETCH_3D;\r\n        var xs = x + stretchOffset;\r\n        var ys = y + stretchOffset;\r\n        var zs = z + stretchOffset;\r\n        var xsb = Math.floor(xs);\r\n        var ysb = Math.floor(ys);\r\n        var zsb = Math.floor(zs);\r\n        var squishOffset = (xsb + ysb + zsb) * SQUISH_3D;\r\n        var dx0 = x - (xsb + squishOffset);\r\n        var dy0 = y - (ysb + squishOffset);\r\n        var dz0 = z - (zsb + squishOffset);\r\n        var xins = xs - xsb;\r\n        var yins = ys - ysb;\r\n        var zins = zs - zsb;\r\n        var inSum = xins + yins + zins;\r\n        var hash = (yins - zins + 1) |\r\n            ((xins - yins + 1) << 1) |\r\n            ((xins - zins + 1) << 2) |\r\n            (inSum << 3) |\r\n            ((inSum + zins) << 5) |\r\n            ((inSum + yins) << 7) |\r\n            ((inSum + xins) << 9);\r\n        var value = 0;\r\n        for (var c = lookup[hash]; c !== undefined; c = c.next) {\r\n            var dx = dx0 + c.dx;\r\n            var dy = dy0 + c.dy;\r\n            var dz = dz0 + c.dz;\r\n            var attn = 2 - dx * dx - dy * dy - dz * dz;\r\n            if (attn > 0) {\r\n                var px = xsb + c.xsb;\r\n                var py = ysb + c.ysb;\r\n                var pz = zsb + c.zsb;\r\n                var indexPartA = perm[px & 0xff];\r\n                var indexPartB = perm[(indexPartA + py) & 0xff];\r\n                var index = perm3D[(indexPartB + pz) & 0xff];\r\n                var valuePart = gradients3D[index] * dx +\r\n                    gradients3D[index + 1] * dy +\r\n                    gradients3D[index + 2] * dz;\r\n                value += attn * attn * attn * attn * valuePart;\r\n            }\r\n        }\r\n        return value * NORM_3D;\r\n    };\r\n}\r\nexports.makeNoise3D = makeNoise3D;\r\nvar base3D = [\r\n    [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1],\r\n    [2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1, 3, 1, 1, 1],\r\n    [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1],\r\n];\r\nvar gradients3D = [\r\n    -11,\r\n    4,\r\n    4,\r\n    -4,\r\n    11,\r\n    4,\r\n    -4,\r\n    4,\r\n    11,\r\n    11,\r\n    4,\r\n    4,\r\n    4,\r\n    11,\r\n    4,\r\n    4,\r\n    4,\r\n    11,\r\n    -11,\r\n    -4,\r\n    4,\r\n    -4,\r\n    -11,\r\n    4,\r\n    -4,\r\n    -4,\r\n    11,\r\n    11,\r\n    -4,\r\n    4,\r\n    4,\r\n    -11,\r\n    4,\r\n    4,\r\n    -4,\r\n    11,\r\n    -11,\r\n    4,\r\n    -4,\r\n    -4,\r\n    11,\r\n    -4,\r\n    -4,\r\n    4,\r\n    -11,\r\n    11,\r\n    4,\r\n    -4,\r\n    4,\r\n    11,\r\n    -4,\r\n    4,\r\n    4,\r\n    -11,\r\n    -11,\r\n    -4,\r\n    -4,\r\n    -4,\r\n    -11,\r\n    -4,\r\n    -4,\r\n    -4,\r\n    -11,\r\n    11,\r\n    -4,\r\n    -4,\r\n    4,\r\n    -11,\r\n    -4,\r\n    4,\r\n    -4,\r\n    -11,\r\n];\r\nvar lookupPairs3D = [\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    2,\r\n    2,\r\n    5,\r\n    1,\r\n    6,\r\n    0,\r\n    7,\r\n    0,\r\n    32,\r\n    2,\r\n    34,\r\n    2,\r\n    129,\r\n    1,\r\n    133,\r\n    1,\r\n    160,\r\n    5,\r\n    161,\r\n    5,\r\n    518,\r\n    0,\r\n    519,\r\n    0,\r\n    546,\r\n    4,\r\n    550,\r\n    4,\r\n    645,\r\n    3,\r\n    647,\r\n    3,\r\n    672,\r\n    5,\r\n    673,\r\n    5,\r\n    674,\r\n    4,\r\n    677,\r\n    3,\r\n    678,\r\n    4,\r\n    679,\r\n    3,\r\n    680,\r\n    13,\r\n    681,\r\n    13,\r\n    682,\r\n    12,\r\n    685,\r\n    14,\r\n    686,\r\n    12,\r\n    687,\r\n    14,\r\n    712,\r\n    20,\r\n    714,\r\n    18,\r\n    809,\r\n    21,\r\n    813,\r\n    23,\r\n    840,\r\n    20,\r\n    841,\r\n    21,\r\n    1198,\r\n    19,\r\n    1199,\r\n    22,\r\n    1226,\r\n    18,\r\n    1230,\r\n    19,\r\n    1325,\r\n    23,\r\n    1327,\r\n    22,\r\n    1352,\r\n    15,\r\n    1353,\r\n    17,\r\n    1354,\r\n    15,\r\n    1357,\r\n    17,\r\n    1358,\r\n    16,\r\n    1359,\r\n    16,\r\n    1360,\r\n    11,\r\n    1361,\r\n    10,\r\n    1362,\r\n    11,\r\n    1365,\r\n    10,\r\n    1366,\r\n    9,\r\n    1367,\r\n    9,\r\n    1392,\r\n    11,\r\n    1394,\r\n    11,\r\n    1489,\r\n    10,\r\n    1493,\r\n    10,\r\n    1520,\r\n    8,\r\n    1521,\r\n    8,\r\n    1878,\r\n    9,\r\n    1879,\r\n    9,\r\n    1906,\r\n    7,\r\n    1910,\r\n    7,\r\n    2005,\r\n    6,\r\n    2007,\r\n    6,\r\n    2032,\r\n    8,\r\n    2033,\r\n    8,\r\n    2034,\r\n    7,\r\n    2037,\r\n    6,\r\n    2038,\r\n    7,\r\n    2039,\r\n    6,\r\n];\r\nvar p3D = [\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    -1,\r\n    0,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    -1,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    2,\r\n    1,\r\n    0,\r\n    3,\r\n    1,\r\n    2,\r\n    0,\r\n    1,\r\n    3,\r\n    2,\r\n    0,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    3,\r\n    0,\r\n    2,\r\n    1,\r\n    3,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n];\r\n","\"use strict\";\r\n// This is free and unencumbered software released into the public domain\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.makeNoise4D = void 0;\r\nvar shuffle_seed_1 = require(\"./shuffle_seed\");\r\nvar NORM_4D = 1.0 / 30.0;\r\nvar SQUISH_4D = (Math.sqrt(4 + 1) - 1) / 4;\r\nvar STRETCH_4D = (1 / Math.sqrt(4 + 1) - 1) / 4;\r\nfunction contribution4D(multiplier, xsb, ysb, zsb, wsb) {\r\n    return {\r\n        dx: -xsb - multiplier * SQUISH_4D,\r\n        dy: -ysb - multiplier * SQUISH_4D,\r\n        dz: -zsb - multiplier * SQUISH_4D,\r\n        dw: -wsb - multiplier * SQUISH_4D,\r\n        xsb: xsb,\r\n        ysb: ysb,\r\n        zsb: zsb,\r\n        wsb: wsb,\r\n    };\r\n}\r\nfunction makeNoise4D(clientSeed) {\r\n    var contributions = [];\r\n    for (var i = 0; i < p4D.length; i += 16) {\r\n        var baseSet = base4D[p4D[i]];\r\n        var previous = null;\r\n        var current = null;\r\n        for (var k = 0; k < baseSet.length; k += 5) {\r\n            current = contribution4D(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3], baseSet[k + 4]);\r\n            if (previous === null)\r\n                contributions[i / 16] = current;\r\n            else\r\n                previous.next = current;\r\n            previous = current;\r\n        }\r\n        current.next = contribution4D(p4D[i + 1], p4D[i + 2], p4D[i + 3], p4D[i + 4], p4D[i + 5]);\r\n        current.next.next = contribution4D(p4D[i + 6], p4D[i + 7], p4D[i + 8], p4D[i + 9], p4D[i + 10]);\r\n        current.next.next.next = contribution4D(p4D[i + 11], p4D[i + 12], p4D[i + 13], p4D[i + 14], p4D[i + 15]);\r\n    }\r\n    var lookup = [];\r\n    for (var i = 0; i < lookupPairs4D.length; i += 2) {\r\n        lookup[lookupPairs4D[i]] = contributions[lookupPairs4D[i + 1]];\r\n    }\r\n    var perm = new Uint8Array(256);\r\n    var perm4D = new Uint8Array(256);\r\n    var source = new Uint8Array(256);\r\n    for (var i = 0; i < 256; i++)\r\n        source[i] = i;\r\n    var seed = new Uint32Array(1);\r\n    seed[0] = clientSeed;\r\n    seed = shuffle_seed_1.default(shuffle_seed_1.default(shuffle_seed_1.default(seed)));\r\n    for (var i = 255; i >= 0; i--) {\r\n        seed = shuffle_seed_1.default(seed);\r\n        var r = new Uint32Array(1);\r\n        r[0] = (seed[0] + 31) % (i + 1);\r\n        if (r[0] < 0)\r\n            r[0] += i + 1;\r\n        perm[i] = source[r[0]];\r\n        perm4D[i] = perm[i] & 0xfc;\r\n        source[r[0]] = source[i];\r\n    }\r\n    return function (x, y, z, w) {\r\n        var stretchOffset = (x + y + z + w) * STRETCH_4D;\r\n        var xs = x + stretchOffset;\r\n        var ys = y + stretchOffset;\r\n        var zs = z + stretchOffset;\r\n        var ws = w + stretchOffset;\r\n        var xsb = Math.floor(xs);\r\n        var ysb = Math.floor(ys);\r\n        var zsb = Math.floor(zs);\r\n        var wsb = Math.floor(ws);\r\n        var squishOffset = (xsb + ysb + zsb + wsb) * SQUISH_4D;\r\n        var dx0 = x - (xsb + squishOffset);\r\n        var dy0 = y - (ysb + squishOffset);\r\n        var dz0 = z - (zsb + squishOffset);\r\n        var dw0 = w - (wsb + squishOffset);\r\n        var xins = xs - xsb;\r\n        var yins = ys - ysb;\r\n        var zins = zs - zsb;\r\n        var wins = ws - wsb;\r\n        var inSum = xins + yins + zins + wins;\r\n        var hash = (zins - wins + 1) |\r\n            ((yins - zins + 1) << 1) |\r\n            ((yins - wins + 1) << 2) |\r\n            ((xins - yins + 1) << 3) |\r\n            ((xins - zins + 1) << 4) |\r\n            ((xins - wins + 1) << 5) |\r\n            (inSum << 6) |\r\n            ((inSum + wins) << 8) |\r\n            ((inSum + zins) << 11) |\r\n            ((inSum + yins) << 14) |\r\n            ((inSum + xins) << 17);\r\n        var value = 0;\r\n        for (var c = lookup[hash]; c !== undefined; c = c.next) {\r\n            var dx = dx0 + c.dx;\r\n            var dy = dy0 + c.dy;\r\n            var dz = dz0 + c.dz;\r\n            var dw = dw0 + c.dw;\r\n            var attn = 2 - dx * dx - dy * dy - dz * dz - dw * dw;\r\n            if (attn > 0) {\r\n                var px = xsb + c.xsb;\r\n                var py = ysb + c.ysb;\r\n                var pz = zsb + c.zsb;\r\n                var pw = wsb + c.wsb;\r\n                var indexPartA = perm[px & 0xff];\r\n                var indexPartB = perm[(indexPartA + py) & 0xff];\r\n                var indexPartC = perm[(indexPartB + pz) & 0xff];\r\n                var index = perm4D[(indexPartC + pw) & 0xff];\r\n                var valuePart = gradients4D[index] * dx +\r\n                    gradients4D[index + 1] * dy +\r\n                    gradients4D[index + 2] * dz +\r\n                    gradients4D[index + 3] * dw;\r\n                value += attn * attn * attn * attn * valuePart;\r\n            }\r\n        }\r\n        return value * NORM_4D;\r\n    };\r\n}\r\nexports.makeNoise4D = makeNoise4D;\r\nvar base4D = [\r\n    [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1],\r\n    [3, 1, 1, 1, 0, 3, 1, 1, 0, 1, 3, 1, 0, 1, 1, 3, 0, 1, 1, 1, 4, 1, 1, 1, 1],\r\n    [\r\n        1,\r\n        1,\r\n        0,\r\n        0,\r\n        0,\r\n        1,\r\n        0,\r\n        1,\r\n        0,\r\n        0,\r\n        1,\r\n        0,\r\n        0,\r\n        1,\r\n        0,\r\n        1,\r\n        0,\r\n        0,\r\n        0,\r\n        1,\r\n        2,\r\n        1,\r\n        1,\r\n        0,\r\n        0,\r\n        2,\r\n        1,\r\n        0,\r\n        1,\r\n        0,\r\n        2,\r\n        1,\r\n        0,\r\n        0,\r\n        1,\r\n        2,\r\n        0,\r\n        1,\r\n        1,\r\n        0,\r\n        2,\r\n        0,\r\n        1,\r\n        0,\r\n        1,\r\n        2,\r\n        0,\r\n        0,\r\n        1,\r\n        1,\r\n    ],\r\n    [\r\n        3,\r\n        1,\r\n        1,\r\n        1,\r\n        0,\r\n        3,\r\n        1,\r\n        1,\r\n        0,\r\n        1,\r\n        3,\r\n        1,\r\n        0,\r\n        1,\r\n        1,\r\n        3,\r\n        0,\r\n        1,\r\n        1,\r\n        1,\r\n        2,\r\n        1,\r\n        1,\r\n        0,\r\n        0,\r\n        2,\r\n        1,\r\n        0,\r\n        1,\r\n        0,\r\n        2,\r\n        1,\r\n        0,\r\n        0,\r\n        1,\r\n        2,\r\n        0,\r\n        1,\r\n        1,\r\n        0,\r\n        2,\r\n        0,\r\n        1,\r\n        0,\r\n        1,\r\n        2,\r\n        0,\r\n        0,\r\n        1,\r\n        1,\r\n    ],\r\n];\r\nvar gradients4D = [\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    -3,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    -3,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    -3,\r\n    -1,\r\n    1,\r\n    1,\r\n    -1,\r\n    -3,\r\n    1,\r\n    1,\r\n    -1,\r\n    -1,\r\n    3,\r\n    1,\r\n    -1,\r\n    -1,\r\n    1,\r\n    3,\r\n    3,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    -3,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    -3,\r\n    1,\r\n    -1,\r\n    1,\r\n    -1,\r\n    3,\r\n    -1,\r\n    1,\r\n    -1,\r\n    1,\r\n    -3,\r\n    1,\r\n    -1,\r\n    1,\r\n    -1,\r\n    3,\r\n    3,\r\n    -1,\r\n    -1,\r\n    1,\r\n    1,\r\n    -3,\r\n    -1,\r\n    1,\r\n    1,\r\n    -1,\r\n    -3,\r\n    1,\r\n    1,\r\n    -1,\r\n    -1,\r\n    3,\r\n    -3,\r\n    -1,\r\n    -1,\r\n    1,\r\n    -1,\r\n    -3,\r\n    -1,\r\n    1,\r\n    -1,\r\n    -1,\r\n    -3,\r\n    1,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    3,\r\n    3,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    -3,\r\n    -3,\r\n    1,\r\n    1,\r\n    -1,\r\n    -1,\r\n    3,\r\n    1,\r\n    -1,\r\n    -1,\r\n    1,\r\n    3,\r\n    -1,\r\n    -1,\r\n    1,\r\n    1,\r\n    -3,\r\n    3,\r\n    -1,\r\n    1,\r\n    -1,\r\n    1,\r\n    -3,\r\n    1,\r\n    -1,\r\n    1,\r\n    -1,\r\n    3,\r\n    -1,\r\n    1,\r\n    -1,\r\n    1,\r\n    -3,\r\n    -3,\r\n    -1,\r\n    1,\r\n    -1,\r\n    -1,\r\n    -3,\r\n    1,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    3,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    1,\r\n    -3,\r\n    3,\r\n    1,\r\n    -1,\r\n    -1,\r\n    1,\r\n    3,\r\n    -1,\r\n    -1,\r\n    1,\r\n    1,\r\n    -3,\r\n    -1,\r\n    1,\r\n    1,\r\n    -1,\r\n    -3,\r\n    -3,\r\n    1,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    3,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    1,\r\n    -3,\r\n    -1,\r\n    -1,\r\n    1,\r\n    -1,\r\n    -3,\r\n    3,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    1,\r\n    -3,\r\n    -1,\r\n    -1,\r\n    1,\r\n    -1,\r\n    -3,\r\n    -1,\r\n    1,\r\n    -1,\r\n    -1,\r\n    -3,\r\n    -3,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    -3,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    -3,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    -1,\r\n    -3,\r\n];\r\nvar lookupPairs4D = [\r\n    0,\r\n    3,\r\n    1,\r\n    2,\r\n    2,\r\n    3,\r\n    5,\r\n    2,\r\n    6,\r\n    1,\r\n    7,\r\n    1,\r\n    8,\r\n    3,\r\n    9,\r\n    2,\r\n    10,\r\n    3,\r\n    13,\r\n    2,\r\n    16,\r\n    3,\r\n    18,\r\n    3,\r\n    22,\r\n    1,\r\n    23,\r\n    1,\r\n    24,\r\n    3,\r\n    26,\r\n    3,\r\n    33,\r\n    2,\r\n    37,\r\n    2,\r\n    38,\r\n    1,\r\n    39,\r\n    1,\r\n    41,\r\n    2,\r\n    45,\r\n    2,\r\n    54,\r\n    1,\r\n    55,\r\n    1,\r\n    56,\r\n    0,\r\n    57,\r\n    0,\r\n    58,\r\n    0,\r\n    59,\r\n    0,\r\n    60,\r\n    0,\r\n    61,\r\n    0,\r\n    62,\r\n    0,\r\n    63,\r\n    0,\r\n    256,\r\n    3,\r\n    258,\r\n    3,\r\n    264,\r\n    3,\r\n    266,\r\n    3,\r\n    272,\r\n    3,\r\n    274,\r\n    3,\r\n    280,\r\n    3,\r\n    282,\r\n    3,\r\n    2049,\r\n    2,\r\n    2053,\r\n    2,\r\n    2057,\r\n    2,\r\n    2061,\r\n    2,\r\n    2081,\r\n    2,\r\n    2085,\r\n    2,\r\n    2089,\r\n    2,\r\n    2093,\r\n    2,\r\n    2304,\r\n    9,\r\n    2305,\r\n    9,\r\n    2312,\r\n    9,\r\n    2313,\r\n    9,\r\n    16390,\r\n    1,\r\n    16391,\r\n    1,\r\n    16406,\r\n    1,\r\n    16407,\r\n    1,\r\n    16422,\r\n    1,\r\n    16423,\r\n    1,\r\n    16438,\r\n    1,\r\n    16439,\r\n    1,\r\n    16642,\r\n    8,\r\n    16646,\r\n    8,\r\n    16658,\r\n    8,\r\n    16662,\r\n    8,\r\n    18437,\r\n    6,\r\n    18439,\r\n    6,\r\n    18469,\r\n    6,\r\n    18471,\r\n    6,\r\n    18688,\r\n    9,\r\n    18689,\r\n    9,\r\n    18690,\r\n    8,\r\n    18693,\r\n    6,\r\n    18694,\r\n    8,\r\n    18695,\r\n    6,\r\n    18696,\r\n    9,\r\n    18697,\r\n    9,\r\n    18706,\r\n    8,\r\n    18710,\r\n    8,\r\n    18725,\r\n    6,\r\n    18727,\r\n    6,\r\n    131128,\r\n    0,\r\n    131129,\r\n    0,\r\n    131130,\r\n    0,\r\n    131131,\r\n    0,\r\n    131132,\r\n    0,\r\n    131133,\r\n    0,\r\n    131134,\r\n    0,\r\n    131135,\r\n    0,\r\n    131352,\r\n    7,\r\n    131354,\r\n    7,\r\n    131384,\r\n    7,\r\n    131386,\r\n    7,\r\n    133161,\r\n    5,\r\n    133165,\r\n    5,\r\n    133177,\r\n    5,\r\n    133181,\r\n    5,\r\n    133376,\r\n    9,\r\n    133377,\r\n    9,\r\n    133384,\r\n    9,\r\n    133385,\r\n    9,\r\n    133400,\r\n    7,\r\n    133402,\r\n    7,\r\n    133417,\r\n    5,\r\n    133421,\r\n    5,\r\n    133432,\r\n    7,\r\n    133433,\r\n    5,\r\n    133434,\r\n    7,\r\n    133437,\r\n    5,\r\n    147510,\r\n    4,\r\n    147511,\r\n    4,\r\n    147518,\r\n    4,\r\n    147519,\r\n    4,\r\n    147714,\r\n    8,\r\n    147718,\r\n    8,\r\n    147730,\r\n    8,\r\n    147734,\r\n    8,\r\n    147736,\r\n    7,\r\n    147738,\r\n    7,\r\n    147766,\r\n    4,\r\n    147767,\r\n    4,\r\n    147768,\r\n    7,\r\n    147770,\r\n    7,\r\n    147774,\r\n    4,\r\n    147775,\r\n    4,\r\n    149509,\r\n    6,\r\n    149511,\r\n    6,\r\n    149541,\r\n    6,\r\n    149543,\r\n    6,\r\n    149545,\r\n    5,\r\n    149549,\r\n    5,\r\n    149558,\r\n    4,\r\n    149559,\r\n    4,\r\n    149561,\r\n    5,\r\n    149565,\r\n    5,\r\n    149566,\r\n    4,\r\n    149567,\r\n    4,\r\n    149760,\r\n    9,\r\n    149761,\r\n    9,\r\n    149762,\r\n    8,\r\n    149765,\r\n    6,\r\n    149766,\r\n    8,\r\n    149767,\r\n    6,\r\n    149768,\r\n    9,\r\n    149769,\r\n    9,\r\n    149778,\r\n    8,\r\n    149782,\r\n    8,\r\n    149784,\r\n    7,\r\n    149786,\r\n    7,\r\n    149797,\r\n    6,\r\n    149799,\r\n    6,\r\n    149801,\r\n    5,\r\n    149805,\r\n    5,\r\n    149814,\r\n    4,\r\n    149815,\r\n    4,\r\n    149816,\r\n    7,\r\n    149817,\r\n    5,\r\n    149818,\r\n    7,\r\n    149821,\r\n    5,\r\n    149822,\r\n    4,\r\n    149823,\r\n    4,\r\n    149824,\r\n    37,\r\n    149825,\r\n    37,\r\n    149826,\r\n    36,\r\n    149829,\r\n    34,\r\n    149830,\r\n    36,\r\n    149831,\r\n    34,\r\n    149832,\r\n    37,\r\n    149833,\r\n    37,\r\n    149842,\r\n    36,\r\n    149846,\r\n    36,\r\n    149848,\r\n    35,\r\n    149850,\r\n    35,\r\n    149861,\r\n    34,\r\n    149863,\r\n    34,\r\n    149865,\r\n    33,\r\n    149869,\r\n    33,\r\n    149878,\r\n    32,\r\n    149879,\r\n    32,\r\n    149880,\r\n    35,\r\n    149881,\r\n    33,\r\n    149882,\r\n    35,\r\n    149885,\r\n    33,\r\n    149886,\r\n    32,\r\n    149887,\r\n    32,\r\n    150080,\r\n    49,\r\n    150082,\r\n    48,\r\n    150088,\r\n    49,\r\n    150098,\r\n    48,\r\n    150104,\r\n    47,\r\n    150106,\r\n    47,\r\n    151873,\r\n    46,\r\n    151877,\r\n    45,\r\n    151881,\r\n    46,\r\n    151909,\r\n    45,\r\n    151913,\r\n    44,\r\n    151917,\r\n    44,\r\n    152128,\r\n    49,\r\n    152129,\r\n    46,\r\n    152136,\r\n    49,\r\n    152137,\r\n    46,\r\n    166214,\r\n    43,\r\n    166215,\r\n    42,\r\n    166230,\r\n    43,\r\n    166247,\r\n    42,\r\n    166262,\r\n    41,\r\n    166263,\r\n    41,\r\n    166466,\r\n    48,\r\n    166470,\r\n    43,\r\n    166482,\r\n    48,\r\n    166486,\r\n    43,\r\n    168261,\r\n    45,\r\n    168263,\r\n    42,\r\n    168293,\r\n    45,\r\n    168295,\r\n    42,\r\n    168512,\r\n    31,\r\n    168513,\r\n    28,\r\n    168514,\r\n    31,\r\n    168517,\r\n    28,\r\n    168518,\r\n    25,\r\n    168519,\r\n    25,\r\n    280952,\r\n    40,\r\n    280953,\r\n    39,\r\n    280954,\r\n    40,\r\n    280957,\r\n    39,\r\n    280958,\r\n    38,\r\n    280959,\r\n    38,\r\n    281176,\r\n    47,\r\n    281178,\r\n    47,\r\n    281208,\r\n    40,\r\n    281210,\r\n    40,\r\n    282985,\r\n    44,\r\n    282989,\r\n    44,\r\n    283001,\r\n    39,\r\n    283005,\r\n    39,\r\n    283208,\r\n    30,\r\n    283209,\r\n    27,\r\n    283224,\r\n    30,\r\n    283241,\r\n    27,\r\n    283256,\r\n    22,\r\n    283257,\r\n    22,\r\n    297334,\r\n    41,\r\n    297335,\r\n    41,\r\n    297342,\r\n    38,\r\n    297343,\r\n    38,\r\n    297554,\r\n    29,\r\n    297558,\r\n    24,\r\n    297562,\r\n    29,\r\n    297590,\r\n    24,\r\n    297594,\r\n    21,\r\n    297598,\r\n    21,\r\n    299365,\r\n    26,\r\n    299367,\r\n    23,\r\n    299373,\r\n    26,\r\n    299383,\r\n    23,\r\n    299389,\r\n    20,\r\n    299391,\r\n    20,\r\n    299584,\r\n    31,\r\n    299585,\r\n    28,\r\n    299586,\r\n    31,\r\n    299589,\r\n    28,\r\n    299590,\r\n    25,\r\n    299591,\r\n    25,\r\n    299592,\r\n    30,\r\n    299593,\r\n    27,\r\n    299602,\r\n    29,\r\n    299606,\r\n    24,\r\n    299608,\r\n    30,\r\n    299610,\r\n    29,\r\n    299621,\r\n    26,\r\n    299623,\r\n    23,\r\n    299625,\r\n    27,\r\n    299629,\r\n    26,\r\n    299638,\r\n    24,\r\n    299639,\r\n    23,\r\n    299640,\r\n    22,\r\n    299641,\r\n    22,\r\n    299642,\r\n    21,\r\n    299645,\r\n    20,\r\n    299646,\r\n    21,\r\n    299647,\r\n    20,\r\n    299648,\r\n    61,\r\n    299649,\r\n    60,\r\n    299650,\r\n    61,\r\n    299653,\r\n    60,\r\n    299654,\r\n    59,\r\n    299655,\r\n    59,\r\n    299656,\r\n    58,\r\n    299657,\r\n    57,\r\n    299666,\r\n    55,\r\n    299670,\r\n    54,\r\n    299672,\r\n    58,\r\n    299674,\r\n    55,\r\n    299685,\r\n    52,\r\n    299687,\r\n    51,\r\n    299689,\r\n    57,\r\n    299693,\r\n    52,\r\n    299702,\r\n    54,\r\n    299703,\r\n    51,\r\n    299704,\r\n    56,\r\n    299705,\r\n    56,\r\n    299706,\r\n    53,\r\n    299709,\r\n    50,\r\n    299710,\r\n    53,\r\n    299711,\r\n    50,\r\n    299904,\r\n    61,\r\n    299906,\r\n    61,\r\n    299912,\r\n    58,\r\n    299922,\r\n    55,\r\n    299928,\r\n    58,\r\n    299930,\r\n    55,\r\n    301697,\r\n    60,\r\n    301701,\r\n    60,\r\n    301705,\r\n    57,\r\n    301733,\r\n    52,\r\n    301737,\r\n    57,\r\n    301741,\r\n    52,\r\n    301952,\r\n    79,\r\n    301953,\r\n    79,\r\n    301960,\r\n    76,\r\n    301961,\r\n    76,\r\n    316038,\r\n    59,\r\n    316039,\r\n    59,\r\n    316054,\r\n    54,\r\n    316071,\r\n    51,\r\n    316086,\r\n    54,\r\n    316087,\r\n    51,\r\n    316290,\r\n    78,\r\n    316294,\r\n    78,\r\n    316306,\r\n    73,\r\n    316310,\r\n    73,\r\n    318085,\r\n    77,\r\n    318087,\r\n    77,\r\n    318117,\r\n    70,\r\n    318119,\r\n    70,\r\n    318336,\r\n    79,\r\n    318337,\r\n    79,\r\n    318338,\r\n    78,\r\n    318341,\r\n    77,\r\n    318342,\r\n    78,\r\n    318343,\r\n    77,\r\n    430776,\r\n    56,\r\n    430777,\r\n    56,\r\n    430778,\r\n    53,\r\n    430781,\r\n    50,\r\n    430782,\r\n    53,\r\n    430783,\r\n    50,\r\n    431000,\r\n    75,\r\n    431002,\r\n    72,\r\n    431032,\r\n    75,\r\n    431034,\r\n    72,\r\n    432809,\r\n    74,\r\n    432813,\r\n    69,\r\n    432825,\r\n    74,\r\n    432829,\r\n    69,\r\n    433032,\r\n    76,\r\n    433033,\r\n    76,\r\n    433048,\r\n    75,\r\n    433065,\r\n    74,\r\n    433080,\r\n    75,\r\n    433081,\r\n    74,\r\n    447158,\r\n    71,\r\n    447159,\r\n    68,\r\n    447166,\r\n    71,\r\n    447167,\r\n    68,\r\n    447378,\r\n    73,\r\n    447382,\r\n    73,\r\n    447386,\r\n    72,\r\n    447414,\r\n    71,\r\n    447418,\r\n    72,\r\n    447422,\r\n    71,\r\n    449189,\r\n    70,\r\n    449191,\r\n    70,\r\n    449197,\r\n    69,\r\n    449207,\r\n    68,\r\n    449213,\r\n    69,\r\n    449215,\r\n    68,\r\n    449408,\r\n    67,\r\n    449409,\r\n    67,\r\n    449410,\r\n    66,\r\n    449413,\r\n    64,\r\n    449414,\r\n    66,\r\n    449415,\r\n    64,\r\n    449416,\r\n    67,\r\n    449417,\r\n    67,\r\n    449426,\r\n    66,\r\n    449430,\r\n    66,\r\n    449432,\r\n    65,\r\n    449434,\r\n    65,\r\n    449445,\r\n    64,\r\n    449447,\r\n    64,\r\n    449449,\r\n    63,\r\n    449453,\r\n    63,\r\n    449462,\r\n    62,\r\n    449463,\r\n    62,\r\n    449464,\r\n    65,\r\n    449465,\r\n    63,\r\n    449466,\r\n    65,\r\n    449469,\r\n    63,\r\n    449470,\r\n    62,\r\n    449471,\r\n    62,\r\n    449472,\r\n    19,\r\n    449473,\r\n    19,\r\n    449474,\r\n    18,\r\n    449477,\r\n    16,\r\n    449478,\r\n    18,\r\n    449479,\r\n    16,\r\n    449480,\r\n    19,\r\n    449481,\r\n    19,\r\n    449490,\r\n    18,\r\n    449494,\r\n    18,\r\n    449496,\r\n    17,\r\n    449498,\r\n    17,\r\n    449509,\r\n    16,\r\n    449511,\r\n    16,\r\n    449513,\r\n    15,\r\n    449517,\r\n    15,\r\n    449526,\r\n    14,\r\n    449527,\r\n    14,\r\n    449528,\r\n    17,\r\n    449529,\r\n    15,\r\n    449530,\r\n    17,\r\n    449533,\r\n    15,\r\n    449534,\r\n    14,\r\n    449535,\r\n    14,\r\n    449728,\r\n    19,\r\n    449729,\r\n    19,\r\n    449730,\r\n    18,\r\n    449734,\r\n    18,\r\n    449736,\r\n    19,\r\n    449737,\r\n    19,\r\n    449746,\r\n    18,\r\n    449750,\r\n    18,\r\n    449752,\r\n    17,\r\n    449754,\r\n    17,\r\n    449784,\r\n    17,\r\n    449786,\r\n    17,\r\n    451520,\r\n    19,\r\n    451521,\r\n    19,\r\n    451525,\r\n    16,\r\n    451527,\r\n    16,\r\n    451528,\r\n    19,\r\n    451529,\r\n    19,\r\n    451557,\r\n    16,\r\n    451559,\r\n    16,\r\n    451561,\r\n    15,\r\n    451565,\r\n    15,\r\n    451577,\r\n    15,\r\n    451581,\r\n    15,\r\n    451776,\r\n    19,\r\n    451777,\r\n    19,\r\n    451784,\r\n    19,\r\n    451785,\r\n    19,\r\n    465858,\r\n    18,\r\n    465861,\r\n    16,\r\n    465862,\r\n    18,\r\n    465863,\r\n    16,\r\n    465874,\r\n    18,\r\n    465878,\r\n    18,\r\n    465893,\r\n    16,\r\n    465895,\r\n    16,\r\n    465910,\r\n    14,\r\n    465911,\r\n    14,\r\n    465918,\r\n    14,\r\n    465919,\r\n    14,\r\n    466114,\r\n    18,\r\n    466118,\r\n    18,\r\n    466130,\r\n    18,\r\n    466134,\r\n    18,\r\n    467909,\r\n    16,\r\n    467911,\r\n    16,\r\n    467941,\r\n    16,\r\n    467943,\r\n    16,\r\n    468160,\r\n    13,\r\n    468161,\r\n    13,\r\n    468162,\r\n    13,\r\n    468163,\r\n    13,\r\n    468164,\r\n    13,\r\n    468165,\r\n    13,\r\n    468166,\r\n    13,\r\n    468167,\r\n    13,\r\n    580568,\r\n    17,\r\n    580570,\r\n    17,\r\n    580585,\r\n    15,\r\n    580589,\r\n    15,\r\n    580598,\r\n    14,\r\n    580599,\r\n    14,\r\n    580600,\r\n    17,\r\n    580601,\r\n    15,\r\n    580602,\r\n    17,\r\n    580605,\r\n    15,\r\n    580606,\r\n    14,\r\n    580607,\r\n    14,\r\n    580824,\r\n    17,\r\n    580826,\r\n    17,\r\n    580856,\r\n    17,\r\n    580858,\r\n    17,\r\n    582633,\r\n    15,\r\n    582637,\r\n    15,\r\n    582649,\r\n    15,\r\n    582653,\r\n    15,\r\n    582856,\r\n    12,\r\n    582857,\r\n    12,\r\n    582872,\r\n    12,\r\n    582873,\r\n    12,\r\n    582888,\r\n    12,\r\n    582889,\r\n    12,\r\n    582904,\r\n    12,\r\n    582905,\r\n    12,\r\n    596982,\r\n    14,\r\n    596983,\r\n    14,\r\n    596990,\r\n    14,\r\n    596991,\r\n    14,\r\n    597202,\r\n    11,\r\n    597206,\r\n    11,\r\n    597210,\r\n    11,\r\n    597214,\r\n    11,\r\n    597234,\r\n    11,\r\n    597238,\r\n    11,\r\n    597242,\r\n    11,\r\n    597246,\r\n    11,\r\n    599013,\r\n    10,\r\n    599015,\r\n    10,\r\n    599021,\r\n    10,\r\n    599023,\r\n    10,\r\n    599029,\r\n    10,\r\n    599031,\r\n    10,\r\n    599037,\r\n    10,\r\n    599039,\r\n    10,\r\n    599232,\r\n    13,\r\n    599233,\r\n    13,\r\n    599234,\r\n    13,\r\n    599235,\r\n    13,\r\n    599236,\r\n    13,\r\n    599237,\r\n    13,\r\n    599238,\r\n    13,\r\n    599239,\r\n    13,\r\n    599240,\r\n    12,\r\n    599241,\r\n    12,\r\n    599250,\r\n    11,\r\n    599254,\r\n    11,\r\n    599256,\r\n    12,\r\n    599257,\r\n    12,\r\n    599258,\r\n    11,\r\n    599262,\r\n    11,\r\n    599269,\r\n    10,\r\n    599271,\r\n    10,\r\n    599272,\r\n    12,\r\n    599273,\r\n    12,\r\n    599277,\r\n    10,\r\n    599279,\r\n    10,\r\n    599282,\r\n    11,\r\n    599285,\r\n    10,\r\n    599286,\r\n    11,\r\n    599287,\r\n    10,\r\n    599288,\r\n    12,\r\n    599289,\r\n    12,\r\n    599290,\r\n    11,\r\n    599293,\r\n    10,\r\n    599294,\r\n    11,\r\n    599295,\r\n    10,\r\n];\r\nvar p4D = [\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    -1,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    -1,\r\n    0,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    -1,\r\n    0,\r\n    0,\r\n    -1,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    -1,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    -1,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    4,\r\n    2,\r\n    1,\r\n    1,\r\n    0,\r\n    4,\r\n    1,\r\n    2,\r\n    1,\r\n    0,\r\n    4,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    1,\r\n    4,\r\n    2,\r\n    1,\r\n    0,\r\n    1,\r\n    4,\r\n    1,\r\n    2,\r\n    0,\r\n    1,\r\n    4,\r\n    1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    4,\r\n    2,\r\n    0,\r\n    1,\r\n    1,\r\n    4,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    4,\r\n    1,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    4,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    4,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    4,\r\n    0,\r\n    1,\r\n    1,\r\n    2,\r\n    1,\r\n    2,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    3,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    3,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    3,\r\n    2,\r\n    0,\r\n    1,\r\n    0,\r\n    3,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    3,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    3,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    3,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    2,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    3,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    3,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    3,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    3,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    3,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    3,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    3,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    -1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    -1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    -1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    -1,\r\n    1,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    3,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    3,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    4,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    0,\r\n    1,\r\n    0,\r\n    3,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    4,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    3,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    4,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    4,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    3,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    4,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    3,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    4,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    3,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    3,\r\n    2,\r\n    0,\r\n    1,\r\n    0,\r\n    3,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    3,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    3,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    1,\r\n    -1,\r\n    3,\r\n    3,\r\n    2,\r\n    1,\r\n    0,\r\n    0,\r\n    3,\r\n    1,\r\n    2,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    3,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    1,\r\n    -1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    0,\r\n    1,\r\n    0,\r\n    3,\r\n    1,\r\n    0,\r\n    2,\r\n    0,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    2,\r\n    0,\r\n    0,\r\n    1,\r\n    3,\r\n    1,\r\n    0,\r\n    0,\r\n    2,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    3,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    2,\r\n    1,\r\n    -1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    2,\r\n    1,\r\n    0,\r\n    3,\r\n    0,\r\n    1,\r\n    2,\r\n    0,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    2,\r\n    0,\r\n    1,\r\n    3,\r\n    0,\r\n    1,\r\n    0,\r\n    2,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n    3,\r\n    3,\r\n    0,\r\n    0,\r\n    2,\r\n    1,\r\n    3,\r\n    0,\r\n    0,\r\n    1,\r\n    2,\r\n    2,\r\n    -1,\r\n    1,\r\n    1,\r\n    1,\r\n];\r\n","\"use strict\";\r\n// This is free and unencumbered software released into the public domain\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.makeNoise4D = exports.makeNoise3D = exports.makeNoise2D = void 0;\r\nvar _2d_1 = require(\"./2d\");\r\nObject.defineProperty(exports, \"makeNoise2D\", { enumerable: true, get: function () { return _2d_1.makeNoise2D; } });\r\nvar _3d_1 = require(\"./3d\");\r\nObject.defineProperty(exports, \"makeNoise3D\", { enumerable: true, get: function () { return _3d_1.makeNoise3D; } });\r\nvar _4d_1 = require(\"./4d\");\r\nObject.defineProperty(exports, \"makeNoise4D\", { enumerable: true, get: function () { return _4d_1.makeNoise4D; } });\r\n","\"use strict\";\r\n// This is free and unencumbered software released into the public domain\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction shuffleSeed(seed) {\r\n    var newSeed = new Uint32Array(1);\r\n    newSeed[0] = seed[0] * 1664525 + 1013904223;\r\n    return newSeed;\r\n}\r\nexports.default = shuffleSeed;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","import { createNoise, newFractalNoise, defaultOctaves, defaultFrequency, defaultPersistence, generateRandomSeed } from './mapgen.js';\r\n\r\nexport const terrainType = {\r\n  OCEAN: 'OCEAN',\r\n  SEA: 'SEA',\r\n  WET_SAND: 'WET_SAND',\r\n  SAND: 'SAND',\r\n  DRY_SAND: 'DRY_SAND',\r\n  DRY_GRASS: 'DRY_GRASS',\r\n  GRASS: 'GRASS',\r\n  WET_GRASS: 'WET_GRASS',\r\n  MOUNTAIN_SNOW: 'MOUNTAIN_SNOW',\r\n  MOUNTAIN_ORE: 'MOUNTAIN_ORE',\r\n  MOUNTAIN: 'MOUNTAIN',\r\n  DESERT: 'DESERT',\r\n  RIVER: 'RIVER',\r\n};\r\n\r\nexport function generateMap(width, height, terrainNoise, variantNoise, biomeNoise) {\r\n  const map = [];\r\n  const heightMap = [];\r\n  \r\n  for (let y = 0; y < height; y++) {\r\n    map[y] = [];\r\n    heightMap[y] = [];\r\n    for (let x = 0; x < width; x++) {\r\n      const terrainValue = terrainNoise(x / 100, y / 100);\r\n      const variantValue = variantNoise(x / 100, y / 100);\r\n      const biomeValue = biomeNoise(x / 100, y / 100);\r\n      let info = {};\r\n\r\n      if (terrainValue < 0) {\r\n        info.color = '#003eb2';\r\n        info.type = terrainType.OCEAN;\r\n      } else if (terrainValue < 0.2) {\r\n        info.color = '#0952c6';\r\n        info.type = terrainType.SEA;\r\n      } else if (terrainValue < 0.22) {\r\n        info.variantNoise = variantValue;\r\n        if (variantValue < -0.2) {\r\n          info.color = '#867645';\r\n          info.type = terrainType.WET_SAND;\r\n        } else if (variantValue < 0.2) {\r\n          info.color = '#a49463';\r\n          info.type = terrainType.SAND;\r\n        } else {\r\n          info.color = '#c2b281';\r\n          info.type = terrainType.DRY_SAND;\r\n        }\r\n      } else if (biomeValue > 0.5) {\r\n        info.color = '#f0e68c';\r\n        info.type = terrainType.DESERT;\r\n      } else if (terrainValue < 0.5) {\r\n        info.variantNoise = variantValue;\r\n        if (variantValue < -0.2) {\r\n          info.color = '#284d00';\r\n          info.type = terrainType.DRY_GRASS;\r\n        } else if (variantValue < 0.2) {\r\n          info.color = '#3c6114';\r\n          info.type = terrainType.GRASS;\r\n        } else {\r\n          info.color = '#5a7f32';\r\n          info.type = terrainType.WET_GRASS;\r\n        }\r\n      } else {\r\n        info.variantNoise = variantValue;\r\n        if (variantValue < -0.2) {\r\n          info.color = '#ebebeb';\r\n          info.type = terrainType.MOUNTAIN_SNOW;\r\n        } else if (variantValue < 0.2) {\r\n          info.color = '#8c8e7b';\r\n          info.type = terrainType.MOUNTAIN_ORE;\r\n        } else {\r\n          info.color = '#a0a28f';\r\n          info.type = terrainType.MOUNTAIN;\r\n        }\r\n      }\r\n\r\n      map[y][x] = info;\r\n      heightMap[y][x] = terrainValue;\r\n    }\r\n  }\r\n\r\n  return map;\r\n}\r\n\r\nexport function generateRivers(map, heightMap, averageRiverLength) {\r\n  const width = map[0].length;\r\n  const height = map.length;\r\n  const riverSources = [];\r\n  const directions = [\r\n    { dx: 0, dy: 1 },  // вниз\r\n    { dx: 0, dy: -1 }, // вверх\r\n    { dx: -1, dy: 0 }, // влево\r\n    { dx: 1, dy: 0 },  // вправо\r\n    { dx: 1, dy: 1 },  // вправо-вниз\r\n    { dx: -1, dy: -1 },// влево-вверх\r\n    { dx: -1, dy: 1 }, // влево-вниз\r\n    { dx: 1, dy: -1 }  // вправо-вверх\r\n  ];\r\n\r\n  const oppositeDirections = {\r\n    '0,1': '0,-1',\r\n    '0,-1': '0,1',\r\n    '-1,0': '1,0',\r\n    '1,0': '-1,0',\r\n    '1,1': '-1,-1',\r\n    '-1,-1': '1,1',\r\n    '-1,1': '1,-1',\r\n    '1,-1': '-1,1'\r\n  };\r\n\r\n  for (let y = 0; y < height; y++) {\r\n    for (let x = 0; x < width; x++) {\r\n      if ((map[y][x].type === terrainType.MOUNTAIN || map[y][x].type === terrainType.MOUNTAIN_ORE || map[y][x].type === terrainType.WET_GRASS || map[y][x].type === terrainType.DRY_GRASS || map[y][x].type === terrainType.GRASS) && Math.random() < 0.000085) {\r\n        riverSources.push({ x, y });\r\n      }\r\n    }\r\n  }\r\n\r\n  const riverTerminationProbability = 0.01 / averageRiverLength;\r\n\r\n  riverSources.forEach(source => {\r\n    let current = source;\r\n    let riverDirection = directions[Math.floor(Math.random() * directions.length)];\r\n    const visited = new Set();\r\n    visited.add(`${current.x},${current.y}`);\r\n    let riverLength = 0;\r\n    let previousDirection = null;\r\n\r\n    while (current) {\r\n      map[current.y][current.x].type = terrainType.RIVER;\r\n      map[current.y][current.x].color = '#0952c6';\r\n      map[current.y][current.x].width = Math.min(3, Math.floor(riverLength / 120) + 1);\r\n\r\n      riverLength++;\r\n\r\n      let next = null;\r\n      let minHeight = heightMap[current.y][current.x];\r\n      const possibleDirections = [\r\n        riverDirection,\r\n        { dx: riverDirection.dx + 1, dy: riverDirection.dy },\r\n        { dx: riverDirection.dx - 1, dy: riverDirection.dy },\r\n        { dx: riverDirection.dx, dy: riverDirection.dy + 1 },\r\n        { dx: riverDirection.dx, dy: riverDirection.dy - 1 }\r\n      ].filter(dir => dir.dx >= -1 && dir.dx <= 1 && dir.dy >= -1 && dir.dy <= 1 && `${dir.dx},${dir.dy}` !== oppositeDirections[`${riverDirection.dx},${riverDirection.dy}`] && `${dir.dx},${dir.dy}` !== previousDirection);\r\n\r\n      possibleDirections.sort(() => Math.random() - 0.65);\r\n\r\n      for (const dir of possibleDirections) {\r\n        const ny = current.y + dir.dy;\r\n        const nx = current.x + dir.dx;\r\n        if (ny >= 0 && ny < height && nx >= 0 && nx < width && !visited.has(`${nx},${ny}`)) {\r\n          if (heightMap[ny][nx] < minHeight) {\r\n            minHeight = heightMap[ny][nx];\r\n            next = { x: nx, y: ny };\r\n            previousDirection = `${riverDirection.dx},${riverDirection.dy}`;\r\n            riverDirection = dir;\r\n          } else if (heightMap[ny][nx] === minHeight && Math.random() < 0.005) {\r\n            next = { x: nx, y: ny };\r\n            previousDirection = `${riverDirection.dx},${riverDirection.dy}`;\r\n            riverDirection = dir;\r\n          } else {\r\n            next = { x: nx, y: ny };\r\n          }\r\n        }\r\n      }\r\n\r\n      if (next && (map[next.y][next.x].type === terrainType.OCEAN || map[next.y][next.x].type === terrainType.SEA || map[next.y][next.x].type === terrainType.RIVER)) {\r\n        map[next.y][next.x].type = terrainType.RIVER;\r\n        map[next.y][next.x].color = '#0952c6';\r\n        map[next.y][next.x].width = Math.min(3, Math.floor(riverLength / 120) + 1);\r\n        break;\r\n      }\r\n\r\n      if (Math.random() < riverTerminationProbability) {\r\n        break;\r\n      }\r\n\r\n      if (next) {\r\n        visited.add(`${next.x},${next.y}`);\r\n      }\r\n      current = next;\r\n    }\r\n  });\r\n}\r\n\r\nexport function drawMap(map, cellSize) {\r\n  console.log('Drawing map...');\r\n  const canvas = document.getElementById('map-canvas');\r\n  canvas.width = map[0].length * cellSize;\r\n  canvas.height = map.length * cellSize;\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  // Очищаем холст перед отрисовкой новой карты\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n  // Дополнительная очистка с небольшим смещением\r\n  ctx.clearRect(-1, -1, canvas.width + 2, canvas.height + 2);\r\n\r\n  for (let y = 0; y < map.length; y++) {\r\n    for (let x = 0; x < map[y].length; x++) {\r\n      const info = map[y][x];\r\n      ctx.fillStyle = info.color;\r\n\r\n      if (info.type === terrainType.RIVER) {\r\n        const width = info.width;\r\n        if (width === 1) {\r\n          ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\r\n        } else if (width === 2) {\r\n          ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\r\n          ctx.fillRect((x - 1) * cellSize, y * cellSize, cellSize, cellSize);\r\n        } else if (width === 3) {\r\n          ctx.fillRect((x - 1) * cellSize, y * cellSize, cellSize, cellSize);\r\n          ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\r\n          ctx.fillRect((x + 1) * cellSize, y * cellSize, cellSize, cellSize);\r\n        }\r\n      } else {\r\n        ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst cellSize = 3;\r\nlet mapGenerated = false;\r\n\r\nfunction drawStatusMessage(message) {\r\n  const statusMessage = document.getElementById('status-message');\r\n  statusMessage.textContent = message;\r\n  statusMessage.style.display = 'block';\r\n}\r\n\r\nfunction hideStatusMessage() {\r\n  const statusMessage = document.getElementById('status-message');\r\n  statusMessage.style.display = 'none';\r\n}\r\n\r\nasync function generateAndDrawMap() {\r\n  const mapWidthInput = document.getElementById('map-width');\r\n  const mapHeightInput = document.getElementById('map-height');\r\n  const mapWidth = parseInt(mapWidthInput.value, 10);\r\n  const mapHeight = parseInt(mapHeightInput.value, 10);\r\n\r\n  if (mapGenerated) {\r\n    location.reload();\r\n  } else {\r\n    console.log('Generating and drawing new map...');\r\n    drawStatusMessage('Generating map...');\r\n\r\n    const terrainSeed = generateRandomSeed();\r\n    const variantSeed = generateRandomSeed();\r\n    const biomeSeed = generateRandomSeed();\r\n\r\n    const worker = new Worker(new URL('./mapWorker.js', import.meta.url));\r\n    worker.postMessage({ mapWidth, mapHeight, terrainSeed, variantSeed, biomeSeed });\r\n\r\n    worker.onmessage = function(event) {\r\n      const map = event.data;\r\n      drawMap(map, cellSize);\r\n      hideStatusMessage();\r\n      mapGenerated = true;\r\n    };\r\n  }\r\n}\r\n\r\ndocument.getElementById('generate-map').addEventListener('click', generateAndDrawMap);"],"names":["makeNoise2D","generateRandomSeed","Math","floor","random","pow","createNoise","seed","newFractalNoise","info","noise","_info$octaves","octaves","defaultOctaves","_info$amplitude","amplitude","_info$frequency","frequency","defaultFrequency","_info$persistence","persistence","defaultPersistence","getFractalNoise","x","y","value","octave","freq","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","toString","from","test","terrainType","OCEAN","SEA","WET_SAND","SAND","DRY_SAND","DRY_GRASS","GRASS","WET_GRASS","MOUNTAIN_SNOW","MOUNTAIN_ORE","MOUNTAIN","DESERT","RIVER","generateMap","width","height","terrainNoise","variantNoise","biomeNoise","map","heightMap","terrainValue","variantValue","biomeValue","color","generateRivers","averageRiverLength","riverSources","directions","dx","dy","oppositeDirections","riverTerminationProbability","source","current","riverDirection","visited","Set","add","concat","riverLength","previousDirection","min","minHeight","possibleDirections","filter","dir","sort","_iterator","_step","ny","nx","has","err","drawMap","cellSize","console","log","canvas","document","getElementById","ctx","getContext","clearRect","fillStyle","fillRect","mapGenerated","drawStatusMessage","message","statusMessage","textContent","style","display","hideStatusMessage","generateAndDrawMap","_generateAndDrawMap","_callee","mapWidthInput","mapHeightInput","mapWidth","mapHeight","terrainSeed","variantSeed","biomeSeed","worker","_callee$","_context","parseInt","location","reload","Worker","URL","import","meta","url","postMessage","onmessage","event","data","addEventListener"],"sourceRoot":""}